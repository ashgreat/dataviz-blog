[
  {
    "path": "posts/2021-09-12-homework0-solution/",
    "title": "Solution to Homework0 ",
    "description": "This is the solution of MSDA Homework0 from 09/2020",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2021-09-12",
    "categories": [],
    "contents": "\nThis homework uses txhousing dataset from ggplot2 package, which is a part of the tidyverse. Additionally, it uses Consumer Price Index (CPI) dataset, which I downloaded from the BLS website (https://data.bls.gov/timeseries/CUUR0000SA0) and cleaned. I will provide the code for cleaning CPI data in the solution to this homework.\ntxhousing consists of the following variables:\n\n\nnames(txhousing)\n\n\n[1] \"city\"      \"year\"      \"month\"     \"sales\"     \"volume\"   \n[6] \"median\"    \"listings\"  \"inventory\" \"date\"     \n\nBefore you start working on this homework, study the variables in txhousing as well as the structure of the dataset by typing this command in your console.\n\n\nhelp(txhousing)\n\n\n\nTake a peek at the data by typing:\n\n\nhead(txhousing)\n\n\n\n\n\ncpi <- readxl::read_excel(\"cpi.xlsx\", skip = 11) %>% \n  select(-c(14:15)) %>% \n  janitor::clean_names() %>% \n  pivot_longer(cols = !year, names_to = \"month_name\", values_to = \"cpi\")\n\nsaveRDS(cpi, file = \"cpi.rds\")\n\n\n\n\n\ncpi <- readRDS(\"cpi.rds\")\n\n\n\n\n\n\nSave the CPI dataset in your project folder where you have also saved this homework file. Read the CPI dataset into this session. It consists of the following columns:\n\n\nnames(cpi)\n\n\n[1] \"year\"       \"month_name\" \"cpi\"       \n\nTake a look at the first few observations by using head() function.\n\nThis homework consists of 10 questions and each carries one point. Your objective is to reproduce the output shown in the HTML file for Q1 through Q9. For Q10 just print the name of the city and the value.\n\nDollar values over a long time series make comparison difficult due to inflation. $100 in January 2000 is worth $154 in July 2020. In txhousing, there are two variables—volume and median—which are specified in unadjusted USD. Questions 1 to 4 are designed to inflation-adjust these two variables to July 2020 dollars.\nQ1\nCreate a new data frame month_map with 12 rows and 2 columns titled month_name and month. month_name in month_map should have only the unique values from month_name column in CPI data frame. month column should contain the month numbers from 1 to 12.\nTry to not type out this data frame manually and instead try to do it algorithmically. This is how it will look:\n\n\nmonth_map <- data.frame(month_name = cpi$month_name[1:12],\n                        month = 1:12)\n\nhead(month_map, 4)\n\n\n  month_name month\n1        jan     1\n2        feb     2\n3        mar     3\n4        apr     4\n\nQ2\nMerge month_map to the CPI data frame. Explicitly identify the common key variable on which you will perform the merge. Store the resulting merged data frame as cpi_merge. Print the first six rows.\nHere are the first six rows of cpi_merge:\n\n\ncpi_merge <- cpi %>% \n  inner_join(month_map, by = \"month_name\")\n\nhead(cpi_merge)\n\n\n# A tibble: 6 x 4\n   year month_name   cpi month\n  <dbl> <chr>      <dbl> <int>\n1  1999 jan         164.     1\n2  1999 feb         164.     2\n3  1999 mar         165      3\n4  1999 apr         166.     4\n5  1999 may         166.     5\n6  1999 jun         166.     6\n\nQ3\nWe want to add a column to the txhousing data frame that holds the information on the CPI. Rather than altering txhousing, create a new data frame housing by merging txhousing and cpi_merge. The common keys for merging are year and month. Note that the resulting data frame is essentially txhousing with just one more column of CPI.\nHere are the top six rows of housing:\n\n\nhousing <- txhousing %>% \n  inner_join(cpi_merge, by = c(\"year\", \"month\")) %>% \n  select(!month_name)\n\nhead(housing)\n\n\n# A tibble: 6 x 10\n  city   year month sales volume median listings inventory  date   cpi\n  <chr> <dbl> <int> <dbl>  <dbl>  <dbl>    <dbl>     <dbl> <dbl> <dbl>\n1 Abil…  2000     1    72 5.38e6  71400      701       6.3 2000   169.\n2 Abil…  2000     2    98 6.50e6  58700      746       6.6 2000.  170.\n3 Abil…  2000     3   130 9.28e6  58100      784       6.8 2000.  171.\n4 Abil…  2000     4    98 9.73e6  68600      785       6.9 2000.  171.\n5 Abil…  2000     5   141 1.06e7  67300      794       6.8 2000.  172.\n6 Abil…  2000     6   156 1.39e7  66900      780       6.6 2000.  172.\n\nQ4\nModify housing by adding these new columns:\ncpi_latest - Contains the CPI of July 2020. This entire column will have the same value appearing in each cell.\nmultiplier - Ratio of cpi_latest and cpi\nvolume_adj - Adjusted volume as a product of volume and multiplier\nmedian_adj - Adjusted median sale price as a product of median and multiplier\nHere I show the top six rows with only a select few columns to help you ensure your output resembles this:\n\n\njuly_2020_cpi <- cpi_merge %>% \n  filter(year == 2020, month == 7) %>% \n  pull(cpi)\n\nhousing <- housing %>% \n  mutate(cpi_latest = july_2020_cpi,\n         multiplier = cpi_latest / cpi,\n         volume_adj = volume * multiplier,\n         median_adj = median * multiplier)\n\nhousing %>% \n  select(city, year, month, volume, median, \n         cpi_latest, multiplier, volume_adj, median_adj) %>% \n  head()\n\n\n# A tibble: 6 x 9\n  city     year month   volume median cpi_latest multiplier volume_adj\n  <chr>   <dbl> <int>    <dbl>  <dbl>      <dbl>      <dbl>      <dbl>\n1 Abilene  2000     1  5380000  71400       259.       1.53   8258077.\n2 Abilene  2000     2  6505000  58700       259.       1.53   9926101.\n3 Abilene  2000     3  9285000  58100       259.       1.51  14052294.\n4 Abilene  2000     4  9730000  68600       259.       1.51  14717179.\n5 Abilene  2000     5 10590000  67300       259.       1.51  15999298.\n6 Abilene  2000     6 13910000  66900       259.       1.50  20905423.\n# … with 1 more variable: median_adj <dbl>\n\nQ5\nUsing housing from Q4, create a new data frame housing_sum1 with this information for each city across all years and months:\nMaximum and minimum volume_adj\nMaximum and minimum median_adj sale price\nHint: If you group by city, you will get the summary across all the years and months. \nMerge housing_sum1 into housing by city and save it as a new dataset housing_1.\nHere I show first six rows of housing_1 and only a select columns:\n\n\nhousing_sum1 <- housing %>% \n  group_by(city) %>% \n    summarize(volume_adj_max = max(volume_adj),\n              volume_adj_min = min(volume_adj),\n              median_adj_max = max(median_adj),\n              median_adj_min = min(median_adj),\n              .groups = \"drop\")\n\nhousing_1 <- housing %>% \n  inner_join(housing_sum1, by = \"city\")\n\n\nhousing_1 %>% \n  select(city, year, month, volume_adj_max, \n         volume_adj_min, median_adj_max, median_adj_min) %>% \n  head()\n\n\n# A tibble: 6 x 7\n  city     year month volume_adj_max volume_adj_min median_adj_max\n  <chr>   <dbl> <int>          <dbl>          <dbl>          <dbl>\n1 Abilene  2000     1      49773624.       7678915.        161440.\n2 Abilene  2000     2      49773624.       7678915.        161440.\n3 Abilene  2000     3      49773624.       7678915.        161440.\n4 Abilene  2000     4      49773624.       7678915.        161440.\n5 Abilene  2000     5      49773624.       7678915.        161440.\n6 Abilene  2000     6      49773624.       7678915.        161440.\n# … with 1 more variable: median_adj_min <dbl>\n\nHere I show last six rows of housing_1 and only a select columns:\n\n\nhousing_1 %>% \n  select(city, year, month, volume_adj_max, \n         volume_adj_min, median_adj_max, median_adj_min) %>% \n  tail()\n\n\n# A tibble: 6 x 7\n  city         year month volume_adj_max volume_adj_min median_adj_max\n  <chr>       <dbl> <int>          <dbl>          <dbl>          <dbl>\n1 Wichita Fa…  2015     2      33832205.       8337061.        147084.\n2 Wichita Fa…  2015     3      33832205.       8337061.        147084.\n3 Wichita Fa…  2015     4      33832205.       8337061.        147084.\n4 Wichita Fa…  2015     5      33832205.       8337061.        147084.\n5 Wichita Fa…  2015     6      33832205.       8337061.        147084.\n6 Wichita Fa…  2015     7      33832205.       8337061.        147084.\n# … with 1 more variable: median_adj_min <dbl>\n\nQ6\nUsing housing_1 from Q5, create a new data frame housing_min which will retain only the rows of housing_1 where volume_adj of a city was equal to the minimum adjusted volume.\nHere I show first six rows of housing_min and only a select columns:\n\n\nhousing_min <- housing_1 %>% \n  filter(volume_adj == volume_adj_min)\n\nhousing_min %>% \n  select(city, year, month, volume_adj, \n         volume_adj_min, volume_adj_max) %>% \n  head()\n\n\n# A tibble: 6 x 6\n  city       year month volume_adj volume_adj_min volume_adj_max\n  <chr>     <dbl> <int>      <dbl>          <dbl>          <dbl>\n1 Abilene    2003     1   7678915.       7678915.      49773624.\n2 Amarillo   2005    10   9397614.       9397614.      67596289.\n3 Arlington  2011     1  30008080.      30008080.     137867140.\n4 Austin     2009     1 252191554.     252191554.    1248942028.\n5 Bay Area   2000     1  45009066.      45009066.     214278169.\n6 Beaumont   2001     1  13117820.      13117820.      57413784.\n\nUsing housing_1 from Q5, create a new data frame housing_max which will retain only the rows of housing_1 where median_adj of a city was equal to the maximum adjusted median sale price.\nHere I show first six rows of housing_max and only a select columns:\n\n\nhousing_max <- housing_1 %>% \n  filter(median_adj == median_adj_max)\n\nhousing_max %>% \n  select(city, year, month, median_adj, \n         median_adj_max, median_adj_min) %>% \n  head()\n\n\n# A tibble: 6 x 6\n  city       year month median_adj median_adj_max median_adj_min\n  <chr>     <dbl> <int>      <dbl>          <dbl>          <dbl>\n1 Abilene    2015     7    161440.        161440.         84890.\n2 Amarillo   2015     5    172040.        172040.        113162.\n3 Arlington  2015     6    195435.        195435.        131800.\n4 Austin     2015     4    296007.        296007.        200091.\n5 Bay Area   2015     7    218004.        218004.        154570.\n6 Beaumont   2010     1    195862.        195862.        108773.\n\nQ7\nUsing housing_1 from Q5, create a new data frame housing_sum2 with this information for each year and month pair across all cities:\nMedian listings\nMedian sales\nHint: If even a single value for listings or sales of a city is NA, the median of that variable will be NA. In order to avoid this, use na.rm = TRUE argument in median(). \nHere I show first six rows of housing_sum2 and all the columns:\n\n\nhousing_sum2 <- housing_1 %>% \n  group_by(year, month) %>% \n  summarize(listings_med = median(listings, na.rm = TRUE),\n            sales_med = median(sales, na.rm = TRUE),\n            .groups = \"drop\") \n\nhead(housing_sum2)\n\n\n# A tibble: 6 x 4\n   year month listings_med sales_med\n  <dbl> <int>        <dbl>     <dbl>\n1  2000     1         972         99\n2  2000     2         916.       134\n3  2000     3         946.       167\n4  2000     4         985        153\n5  2000     5         978.       165\n6  2000     6         864.       188\n\nMerge housing_sum2 into housing_1 and save a new data frame housing_2.\nHere I show first six rows of housing_2 and some of the columns:\n\n\nhousing_2 <- housing_1 %>% \n  inner_join(housing_sum2, by = c(\"year\", \"month\"))\n\nhousing_2 %>% \n  select(city, year, month, listings, \n         sales, listings_med, sales_med) %>% \n  head()\n\n\n# A tibble: 6 x 7\n  city     year month listings sales listings_med sales_med\n  <chr>   <dbl> <int>    <dbl> <dbl>        <dbl>     <dbl>\n1 Abilene  2000     1      701    72         972         99\n2 Abilene  2000     2      746    98         916.       134\n3 Abilene  2000     3      784   130         946.       167\n4 Abilene  2000     4      785    98         985        153\n5 Abilene  2000     5      794   141         978.       165\n6 Abilene  2000     6      780   156         864.       188\n\nQ8\nModify housing_2 from Q7 to add these indicator variables (also called dummy variables):\nlistings_ind - If a city’s listings is less than or equal to the median listings for that year and month across all the cities, the value should be 0 else it should be 1.\nsales_ind - If a city’s sales is less than or equal to the median sales for that year and month across all the cities, the value should be 0 else it should be 1.\nHint: This can be achieved using ifelse() function from R along with mutate() from dplyr\nHere I show first six rows of housing_2 and some of the columns:\n\n\nhousing_2 <- housing_2 %>% \n  mutate(listings_ind = ifelse(listings <= listings_med, 0, 1),\n         sales_ind = ifelse(sales <= sales_med, 0, 1))\n\nhousing_2 %>% \n  select(city, year, month, listings, \n         listings_med, listings_ind,\n         sales, sales_med, sales_ind) %>% \n  head()\n\n\n# A tibble: 6 x 9\n  city   year month listings listings_med listings_ind sales sales_med\n  <chr> <dbl> <int>    <dbl>        <dbl>        <dbl> <dbl>     <dbl>\n1 Abil…  2000     1      701         972             0    72        99\n2 Abil…  2000     2      746         916.            0    98       134\n3 Abil…  2000     3      784         946.            0   130       167\n4 Abil…  2000     4      785         985             0    98       153\n5 Abil…  2000     5      794         978.            0   141       165\n6 Abil…  2000     6      780         864.            0   156       188\n# … with 1 more variable: sales_ind <dbl>\n\nQ9\nUsing housing_2 from Q8, add a new variable market_hotness as follows:\n\n\nhot_map <- data.frame(listings_ind = c(0, 0, 1, 1),\n           sales_ind = c(0, 1, 0, 1), \n           market_hotness = c(\"Low\", \"High\", \"Very Low\", \"Average\")) \nhot_map %>% \n  knitr::kable(align = c(\"c\", \"c\", \"c\"))\n\n\nlistings_ind\nsales_ind\nmarket_hotness\n0\n0\nLow\n0\n1\nHigh\n1\n0\nVery Low\n1\n1\nAverage\n\nHere I show first six rows of housing_2 and some of the columns:\n\n\nhousing_2 <- housing_2 %>% \n  inner_join(hot_map, by = c(\"listings_ind\", \"sales_ind\"))\n\nhousing_2 %>% \n  select(city, year, month, listings, sales,\n         listings_ind, sales_ind, market_hotness) %>% \n  head()\n\n\n# A tibble: 6 x 8\n  city     year month listings sales listings_ind sales_ind\n  <chr>   <dbl> <int>    <dbl> <dbl>        <dbl>     <dbl>\n1 Abilene  2000     1      701    72            0         0\n2 Abilene  2000     2      746    98            0         0\n3 Abilene  2000     3      784   130            0         0\n4 Abilene  2000     4      785    98            0         0\n5 Abilene  2000     5      794   141            0         0\n6 Abilene  2000     6      780   156            0         0\n# … with 1 more variable: market_hotness <chr>\n\nQ10\nWhich city has the highest average median_adj sale price and what is that price?\n\n\nhousing_2 %>% \n  group_by(city) %>% \n  summarize(median_adj_avg = mean(median_adj, na.rm = TRUE),\n            .groups = \"drop\") %>% \n  arrange(-median_adj_avg) %>% \n  head(1)\n\n\n# A tibble: 1 x 2\n  city          median_adj_avg\n  <chr>                  <dbl>\n1 Collin County        252324.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-09-12T23:16:59-05:00",
    "input_file": "homework0-solution.knit.md"
  },
  {
    "path": "posts/2020-10-31-msda-faculty/",
    "title": "MSDA Faculty",
    "description": "A list of MSDA full-time faculty",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2021-08-18",
    "categories": [],
    "contents": "\nWe don’t have an official listing for the faculty teaching in the MS in Data Analytics (MSDA) program at UTSA as we don’t have any professors permanently assigned to the program. However, there are a few professors, including me, who have been teaching regularly in MSDA. The following table lists these professors and the links to their profiles.\n\n\nCourse\n\n\nFaculty\n\n\nDA6213. Data-Driven Decision Making and Design\n\n\nYeonjoo Park\n\n\nDA6223. Data Analytics Tools and Techniques\n\n\nWenbo Wu\n\n\nIsil Koyuncu\n\n\nDA6233. Data Analytics Visualization and Communication\n\n\nAshwin Malshe\n\n\nDA6813. Data Analytics Applications\n\n\nArka Roy\n\n\nAshwin Malshe\n\n\nDA6823. Data Analytics Practicum I\n\n\nMax Kilger\n\n\nDA6833. Data Analytics Practicum II\n\n\nMax Kilger\n\n\nAshwin Malshe\n\n\nIS6713. Data Foundations\n\n\nAnthony Rios\n\n\nIS6733. Deep Learning on Cloud Platforms\n\n\nYuanxiong (Richard) Guo\n\n\nSTA6443. Statistical Modeling\n\n\nYeonjoo Park\n\n\nSTA 6543. Predictive Modeling\n\n\nMin Wang\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T14:10:31-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-12-ggorce/",
    "title": "Easy pie charts and donut charts with ggforce",
    "description": "I make pie charts and donut charts in ggplot2 using a combination of a bar plot and polar coordinates. This works fine but polar coordinates prevent using any other geoms or annotations that need Cartesian coordinates. For example, annoatation_raster doesn't work with polar coordinates. ggforce solves this issue.",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-12-12",
    "categories": [],
    "contents": "\nIn the previous post, I created a geofacet of donut charts using coord_polar() function from ggplot2. You can also create pie charts in the same way. However, there are two issues with this method.\nThe method is not intuitive. Whether you will get a pie chart or a donut chart depends on xlim() which has no apparent connection to how the resulting plot will look like. This is confusing irrespective of how long you have been using ggplot2.\nggplot2 can handle only one coordinate system per plot. This means, you can’t have polar coordinates and Cartesian coordinates in the same plot. This makes sense because these are two totally different coordinate systems. However, this creates problems when you want to use layers that belong to separate coordinate systems. For instance, it is impossible to overlay images on top of the donut charts. This is because annoate_raster() in ggplot2, which is used to insert images, doesn’t work with polar coordinates. It needs Cartesian coordinates. On the other hand, the donut charts were created using polar coordinates. Otherwise, it is just a bar plot in Cartesian coordinates!\nIn this post I show you how to overcome both these issues by using a relatively unknown package called ggforce. The developer of this package, Thomas Lin Pedersen, is in the core development team for ggplot2. He is also the author of gganimate and patchwork packages.\nWe will use geom_arc_bar() function from ggforce to create pie charts and donut charts. Since it uses Cartesian coordinate system, including images in the plot is super simple.\nData preparation\nLet’s create a simple data set with electoral votes of Biden and Trump. I am using this example because you are familiar with the general idea from my previous post.\n\n\ndt <- tibble(candidate = c(\"Joe Biden\", \"Donald Trump\"),\n             electoral_votes = c(306, 232))\n\n\n\nPie chart\nLet’s make a pie chart first. With two categories, a pie chart is not a bad choice for visualization. There is not a lot to explain in the code below. Both pie and donut charts are circles. To plot a circle, we need only three parameters. We need the x and y coordinates of the center of the circle and we need the radius. A donut chart requires one more parameter. Imagine a donut as an image with two concentric cirles. So for a donut chart, we need to provide the radius of the inner circle as well.\ngeom_arc_bar() can be used for making pie charts and donut charts. It requires an aes() function with the following arguments for positioning circles:\nx0: X coordinate of the center of the circle\ny0: Y coordinate of the center of the circle\nr0: Radius of the inner circle\nr: Radius of the outer circle\nThe other arguments, amount and fill are self explanatory. The variable mapped to amount will decide the size of the pie. In Tableau terminology, this will be mapped to the angle of the pie or donut.\nstat = \"pie\" specifies the that we want a pie chart. When r0 = 0, we get a pie chart. When r0 > 0 we get the inner circle, which results in a donut chart.\nApart from geom_arc_bar() you also need coord_fixed(). This is required to make sure that there is no scaling along the X and Y axis and you indeed get a circle. Otherwise you will get an oval rather than a circle.\nHere I set x0 and y0 both to 0. Of course, this is not a requirement and it will change based on the complexity of the visualization you are making. It’s just the position of the circle on X and Y axes. Next, I set r = 1. Once again, it depends on the context and complexity of your visualization.\n\n\nggplot(dt) +\n  geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = 0, r = 1, \n                   amount = electoral_votes, \n                   fill = candidate), \n               stat = 'pie',\n               color = \"white\") +\n  geom_label(x = c(0.5, -0.5), y = c(-0.3, 0.3), aes(label = electoral_votes)) +\n  scale_fill_manual(values = c(\"#004BA8\", \"#e63946\")) +\n  theme_void() + \n  coord_fixed() +\n  theme(legend.position = \"none\")\n\n\n\n\nThis is a nice pie chart. I positioned the labels such that they are on a roughly 135º line.\nDonut chart\nNow let’s make the donut chart. The code below looks almost the same as the previous code except we have set r0 = 0.8. You will also have to adjust the label positions, which I did by doing some trial and error.\n\n\nggplot(dt) +\n  geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = 0.8, r = 1, \n                   amount = electoral_votes, \n                   fill = candidate), \n               stat = 'pie',\n               color = \"white\") +\n  geom_label(x = c(0.85, -0.85), y = c(-0.3, 0.3), aes(label = electoral_votes)) +\n  scale_fill_manual(values = c(\"#004BA8\", \"#e63946\")) +\n  theme_void() + \n  coord_fixed() +\n  theme(legend.position = \"none\")\n\n\n\n\nDonut chart with image\nThe two graphs above solved the first issue I identified — these two graphs are much easier and intuitive to make compared to using coord_polar(). Next, let’s include an image in the donut chart. I recommend finding an image using Google Images, Pixabay, or Unsplash. I also found that making the image square makes adding it in the donut chart much easier. You can do it in Microsoft Paint in Windows and Preview on Mac.\n\n\nggplot(dt) +\n  geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = 0.8, r = 1, \n                   amount = electoral_votes, \n                   fill = candidate), \n               stat = 'pie',\n               color = \"white\") +\n  geom_label(x = c(0.85, -0.85), y = c(-0.3, 0.3), aes(label = electoral_votes)) +\n  annotation_raster(png::readPNG(here::here(\"Images\", \"biden-pixabay-square.png\")),\n                    xmin = -0.55, xmax = 0.55, ymin = -0.55, ymax = 0.55) +\n  scale_fill_manual(values = c(\"#004BA8\", \"#e63946\")) +\n  theme_void() + \n  coord_fixed() +\n  labs(title = \"2020 US Presidential Elections Electoral Votes\") +\n  theme(legend.position = \"none\",\n        plot.title = element_text(color = \"white\", hjust = 0.5),\n        plot.background = element_rect(fill = \"#1d3557\"),\n        panel.background = element_rect(fill = \"#1d3557\"),\n        panel.border = element_blank())\n\n\n\n\n\n\n\n",
    "preview": "posts/2020-12-12-ggorce/distill-preview.png",
    "last_modified": "2020-12-12T14:39:03-06:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-12-02-election-donuts-pics/",
    "title": "Donut Chart and Geofacets with Images",
    "description": "In this post, I recreate the donut chart overlaid on geo facets. Based on a friend's feedback, I now add pictures of winners of each state.",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-12-02",
    "categories": [],
    "contents": "\nFor the background and more details on this plot, please check out my earlier blog post: https://dataviz.school/posts/2020-11-20--us-election-donut/\nGetting the data\nAs of the date of this writing (21st November 2020), the results of the US Presidential elections have not tallied. The counting is still going on in a few states. However, it is unlikely that the results will change significantly from this point onward. I decided to get data from this Github repo, which scrapes data from NYT. The data is at county-level: https://github.com/favstats/USElection2020-NYT-Results\nFinal plot\nThis is the plot I created. I have used Biden and Trump pictures from www.pixabay.com. Check it out for a lot of free, attribution-free images. I also tried using Trump and Biden icons but it did not work well. I got Trump and Biden icons from here respectively:\nTrump icon Biden icon\nThese are free to use with attribution.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode to create the plot\nHere is the code to recreate these plots. Note that I am assuming that you are using the code to prepare data from my previous post.\nThe main challenge in creating this plot is mismatch of the coordinate system. The donuts are created using polar coordinates. It’s not possible to overlay images on top of those donuts in ggplot2. I decided to use a workaround, which I have successfully used in the past to create dataviz for my wife. I first created two separate plots. First plot is the main donut chart which I created previously. The second plot is just a facet plot of Biden and Trump images. Next I used cowplot package to overlay these two plots on top of each other. It may sound pretty easy but it took me a lot of time to align those two plots perfectly. The key was to use coord_fixed() in the second plot.\nCreate a data set with images\nHere I am creating a data set with a column containing links to either Biden or Trump images. I am also making sure that I retain the winner in each state and DC. The resulting data has 51 rows. Note that in the plot I use image2 variable to overlay images. If you instead want the icons, use image in geom_image() in the code below.\n\n\ndt3 <- dt2 %>%\n  arrange(state, -votes) %>% \n  group_by(state) %>% \n  filter(row_number() == 1) %>% \n  ungroup() %>% \n  mutate(image = case_when(Candidate == \"Biden\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/joe-biden.png\",\n                           Candidate == \"Trump\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/donald-trump.png\"),\n         image2 = case_when(Candidate == \"Biden\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/biden-small-pixabay.png\",\n                           Candidate == \"Trump\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/trump-small-pixabay.png\")\n         )\n\n\n\nCreate donut charts\nThis code is basically copied from the previous post.\n\n\ng3 <- dt2 %>% \n  group_by(state) %>% \n  arrange(Candidate) %>% \n  mutate(ymax = cumsum(per_votes),\n         ymin = ifelse(row_number() == 1, 0, lag(ymax)),\n         ypos = (ymin + ymax) / 2) %>% \n  ungroup() %>% \n  ggplot(aes(ymin = ymin, ymax = ymax, xmin = 3, xmax = 4)) +\n  geom_rect(aes(fill = Candidate)) +\n  geom_text(x = 5, \n             aes(y = ypos, \n                 label = formattable::percent(round(per_votes, 2), digits = 0)),\n             size = 2, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  facet_geo(~state) +\n  scale_fill_manual(values = c(\"#0066f2\", \"#e6f1fd\", \"#ff0000\")) +\n  theme_void()+\n  xlim(-1, 5) +\n  labs(caption = \"Ashwin Malshe \\nhttps://dataviz.school\",\n       subtitle = \" \") +\n  theme(legend.text = element_text(family = \"proxima\", size = 10, color = \"white\"),\n        legend.title = element_blank(),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.2, 1),\n        plot.caption = element_text(family = \"proxima\", size = 10, hjust = 0.95,\n                                    margin = margin(0, 0, 5, 0, \"pt\"),\n                                    face = \"bold\", color = \"#69fffb\"),\n        strip.text = element_text(family = \"proxima\", size = 9, color = \"white\",\n                                  margin = margin(0, 0, 5, 0, \"pt\")),\n        strip.background = element_blank(),\n        plot.background = element_rect(fill = \"#2e3440\", color = NA),\n        panel.background = element_rect(fill = \"#2e3440\", color = NA))\n\n\n# Print the plot\n\ng3\n\n\n\nCreate the plot of images\nThis is the plot that will be layered on top of the donut chart. Note geon_image() from ggimage package.\n\n\ng4 <- ggplot(dt3) +\n  facet_geo(~state) +\n  ggimage::geom_image(aes(x = 0.5, y = -1, image = image), size = 0.5) +\n  theme_void()+\n  xlim(0, 1) +\n  coord_fixed() + # This is critical!\n  theme(\n        strip.background = element_blank(),\n        strip.text = element_blank(),\n        panel.background = element_blank(),\n        plot.background = element_blank())\n\n\n\nSuperimposing the two plots\nThis was easy. I just layered g4 on g3 using align_plots() from the fatnastic package cowplot. Finally, I plotted them and saved in an object g5. Note that if you use the same font as the one I used here, cowplot will generate many error messages. Ignore them as it won’t affect your output.\n\n\naligned_plots <- cowplot::align_plots(g3, g4, align=\"hv\", greedy = FALSE)\n\ng5 <- ggdraw(aligned_plots[[1]]) +\n  draw_plot(aligned_plots[[2]])\n\n\n\nI hope you enjoyed this post!\n\n\n\n",
    "preview": "posts/2020-12-02-election-donuts-pics/distill-preview.png",
    "last_modified": "2020-12-02T15:34:33-06:00",
    "input_file": {},
    "preview_width": 2112,
    "preview_height": 1632
  },
  {
    "path": "posts/2020-11-30-mf-performance/",
    "title": "Persistence in Mutual Fund Performance",
    "description": "In this article, I reproduce Figure 1 from Mark Carhart's classic 1997 Journal of Finance article titled \"On Persistence in Mutual Fund Performance\". The visualizations are created using highcharter and echarts4r packages. It is an interactive bar plot that shows that there is a very low persistence in the mutual fund performance.",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-12-01",
    "categories": [],
    "contents": "\nMark Carhart’s classic 1997 Journal of Finance paper is highly cited for the momentum factor used in asset pricing models. Carhart (1997) augmented Fama-French 3-factor model (Fama and French 1993) with a factor that accounts for the momentum anomaly identified by Jegadeesh and Titman (1993).\n\nDownload Carhart’s article here.\nI read this article for the first time in spring 2007 while taking a class on Capital Markets Research at SUNY-Binghamton taught by Srini Krishnamurthy. Although this article is heavily cited for introducing the momentum factor, the topic of the article is way more interesting. In a nutshell, the article shows that mutual fund managers may not be as skilled as commonly believed, and their performance can be explained away mostly by momentum trading strategies. Furthermore, there is no persistence in mutual fund performance. This means that if you decide to invest in a fund based on the last year’s returns, the chances are slim that the performance of the fund will persist in future!\nAlthough over the years I may have forgotten some of the details, Figure 1 from this paper is etched in my memory. From a purely data visualization perspective, it is a terrible plot. A 3-dimensional plot on 2-dimensional paper is no go. This is a static plot which means it lacks interactivity. Finally, this plot was printed in black and white! Yet, this is an amazing plot. I reproduce it here and explain why this is so insightful.\n\n\n\nThis plot is based on one-year gross returns of mutual fund. Carhart first ranked these funds in a descending order of the annual returns and then created 10 deciles. Accodingly, Decile 1 contains top 10% funds by returns and Decile 10 has the poorest performing 10% funds. Next he tracks these funds in the succeeding year, where he again sorts them in one-year returns deciles. The plot above shows the transition probability of a fund ranked in decile \\(i\\) in year \\(t\\) moving to decile \\(j\\) in year \\(t+1\\). Formally, he is plotting the following conditional probability: \\(P(j|i)\\). As some of these funds may not survive the next year, \\(j \\in [Decile 1,..., Decile 10, Dead]\\).\nIf mutual funds managers are skilled and their performance is consistent, one would expect that \\(P(j|i) ~ 1\\) when \\(j = i\\). However, the plot above implies something like \\(P(j|i) ~ U(0, 1)\\) meaning a mutual fund may transition freely from one decile in a year to any decile the next year! That’s quite insightful.\nImproving Figure 1\nMy objective of writing this post is to recreate this data visualization so that the insights are more apparent. In order to do that, I am creating four plots as follows:\nThe first plot is a 2-dimensional heatmap. This is a better representation because it will map the transition probabilities to colors rather than the height of the bars.\nThe second plot uses echarts, a D3 library in JavaScript. I am using an R wrapper called echarts4r. This plot will make this an interactive 3-dimensional visualization.\nI recreate the 3-dimensinoal bar plot using another D3 library called highcharts. I am using an R wrapper called highcharter. With this, I could add different colors to the bars but at the same time, I lost the ability to rotate the plot. I correct it in the last plot.\nIn this plot, I use a Shiny app that adds rotation to the plot made using highcharter.\n\nI used a mutual funds data set spanning 1961 to 2019. In my plots, the deciles are reversed. I created the deciles by sorting returns in ascending order. So Decile 1 consists of poorly performing mutual funds while Decile 10 consists of top performing mutual funds. Additionally, in my data I did not have a quick way to determine dead mutual funds so I don’t have that category. I just used the reported raw returns without adjusting them for the management expenses.\n\nHeatmap\nThe first plot we will create is a heatmap.\n\n\n{\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":\"Rank in Year t+1\"},\"type\":\"category\",\"categories\":[\"Decile 1\",\"Decile 2\",\"Decile 3\",\"Decile 4\",\"Decile 5\",\"Decile 6\",\"Decile 7\",\"Decile 8\",\"Decile 9\",\"Decile 10\"]},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":false},\"treemap\":{\"layoutAlgorithm\":\"squarified\"},\"scatter\":{\"marker\":{\"symbol\":\"circle\"}}},\"colorAxis\":{\"auxpar\":null},\"series\":[{\"group\":\"group\",\"data\":[{\"rev_rank\":1,\"ld_rev_rank\":1,\"n\":11387,\"prob\":0.22,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 1\",\"x\":0,\"y\":0,\"value\":0.22,\"color\":\"#440154\",\"xf\":\"Decile 1\",\"yf\":\"Decile 1\",\"colorv\":4.54545454545455},{\"rev_rank\":1,\"ld_rev_rank\":2,\"n\":4667,\"prob\":0.09,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 2\",\"x\":0,\"y\":1,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 1\",\"yf\":\"Decile 2\",\"colorv\":11.1111111111111},{\"rev_rank\":1,\"ld_rev_rank\":3,\"n\":4843,\"prob\":0.1,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 3\",\"x\":0,\"y\":2,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 1\",\"yf\":\"Decile 3\",\"colorv\":10},{\"rev_rank\":1,\"ld_rev_rank\":4,\"n\":3042,\"prob\":0.06,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 4\",\"x\":0,\"y\":3,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 1\",\"yf\":\"Decile 4\",\"colorv\":16.6666666666667},{\"rev_rank\":1,\"ld_rev_rank\":5,\"n\":2761,\"prob\":0.05,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 5\",\"x\":0,\"y\":4,\"value\":0.05,\"color\":\"#FDE725\",\"xf\":\"Decile 1\",\"yf\":\"Decile 5\",\"colorv\":20},{\"rev_rank\":1,\"ld_rev_rank\":6,\"n\":4197,\"prob\":0.08,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 6\",\"x\":0,\"y\":5,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 1\",\"yf\":\"Decile 6\",\"colorv\":12.5},{\"rev_rank\":1,\"ld_rev_rank\":7,\"n\":2655,\"prob\":0.05,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 7\",\"x\":0,\"y\":6,\"value\":0.05,\"color\":\"#FDE725\",\"xf\":\"Decile 1\",\"yf\":\"Decile 7\",\"colorv\":20},{\"rev_rank\":1,\"ld_rev_rank\":8,\"n\":3625,\"prob\":0.07,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 8\",\"x\":0,\"y\":7,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 1\",\"yf\":\"Decile 8\",\"colorv\":14.2857142857143},{\"rev_rank\":1,\"ld_rev_rank\":9,\"n\":4940,\"prob\":0.1,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 9\",\"x\":0,\"y\":8,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 1\",\"yf\":\"Decile 9\",\"colorv\":10},{\"rev_rank\":1,\"ld_rev_rank\":10,\"n\":8493,\"prob\":0.17,\"Rank in Year t\":\"Decile 1\",\"Rank in Year t+1\":\"Decile 10\",\"x\":0,\"y\":9,\"value\":0.17,\"color\":\"#440154\",\"xf\":\"Decile 1\",\"yf\":\"Decile 10\",\"colorv\":5.88235294117647},{\"rev_rank\":2,\"ld_rev_rank\":1,\"n\":5500,\"prob\":0.11,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 1\",\"x\":1,\"y\":0,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 2\",\"yf\":\"Decile 1\",\"colorv\":9.09090909090909},{\"rev_rank\":2,\"ld_rev_rank\":2,\"n\":7875,\"prob\":0.15,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 2\",\"x\":1,\"y\":1,\"value\":0.15,\"color\":\"#3F145B\",\"xf\":\"Decile 2\",\"yf\":\"Decile 2\",\"colorv\":6.66666666666667},{\"rev_rank\":2,\"ld_rev_rank\":3,\"n\":5826,\"prob\":0.11,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 3\",\"x\":1,\"y\":2,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 2\",\"yf\":\"Decile 3\",\"colorv\":9.09090909090909},{\"rev_rank\":2,\"ld_rev_rank\":4,\"n\":4484,\"prob\":0.09,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 4\",\"x\":1,\"y\":3,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 2\",\"yf\":\"Decile 4\",\"colorv\":11.1111111111111},{\"rev_rank\":2,\"ld_rev_rank\":5,\"n\":4228,\"prob\":0.08,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 5\",\"x\":1,\"y\":4,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 2\",\"yf\":\"Decile 5\",\"colorv\":12.5},{\"rev_rank\":2,\"ld_rev_rank\":6,\"n\":4148,\"prob\":0.08,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 6\",\"x\":1,\"y\":5,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 2\",\"yf\":\"Decile 6\",\"colorv\":12.5},{\"rev_rank\":2,\"ld_rev_rank\":7,\"n\":4344,\"prob\":0.08,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 7\",\"x\":1,\"y\":6,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 2\",\"yf\":\"Decile 7\",\"colorv\":12.5},{\"rev_rank\":2,\"ld_rev_rank\":8,\"n\":4671,\"prob\":0.09,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 8\",\"x\":1,\"y\":7,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 2\",\"yf\":\"Decile 8\",\"colorv\":11.1111111111111},{\"rev_rank\":2,\"ld_rev_rank\":9,\"n\":5381,\"prob\":0.11,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 9\",\"x\":1,\"y\":8,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 2\",\"yf\":\"Decile 9\",\"colorv\":9.09090909090909},{\"rev_rank\":2,\"ld_rev_rank\":10,\"n\":4745,\"prob\":0.09,\"Rank in Year t\":\"Decile 2\",\"Rank in Year t+1\":\"Decile 10\",\"x\":1,\"y\":9,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 2\",\"yf\":\"Decile 10\",\"colorv\":11.1111111111111},{\"rev_rank\":3,\"ld_rev_rank\":1,\"n\":3671,\"prob\":0.07,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 1\",\"x\":2,\"y\":0,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 3\",\"yf\":\"Decile 1\",\"colorv\":14.2857142857143},{\"rev_rank\":3,\"ld_rev_rank\":2,\"n\":6542,\"prob\":0.13,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 2\",\"x\":2,\"y\":1,\"value\":0.13,\"color\":\"#363A6A\",\"xf\":\"Decile 3\",\"yf\":\"Decile 2\",\"colorv\":7.69230769230769},{\"rev_rank\":3,\"ld_rev_rank\":3,\"n\":6862,\"prob\":0.13,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 3\",\"x\":2,\"y\":2,\"value\":0.13,\"color\":\"#363A6A\",\"xf\":\"Decile 3\",\"yf\":\"Decile 3\",\"colorv\":7.69230769230769},{\"rev_rank\":3,\"ld_rev_rank\":4,\"n\":6116,\"prob\":0.12,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 4\",\"x\":2,\"y\":3,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 3\",\"yf\":\"Decile 4\",\"colorv\":8.33333333333333},{\"rev_rank\":3,\"ld_rev_rank\":5,\"n\":4713,\"prob\":0.09,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 5\",\"x\":2,\"y\":4,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 3\",\"yf\":\"Decile 5\",\"colorv\":11.1111111111111},{\"rev_rank\":3,\"ld_rev_rank\":6,\"n\":4064,\"prob\":0.08,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 6\",\"x\":2,\"y\":5,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 3\",\"yf\":\"Decile 6\",\"colorv\":12.5},{\"rev_rank\":3,\"ld_rev_rank\":7,\"n\":5740,\"prob\":0.11,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 7\",\"x\":2,\"y\":6,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 3\",\"yf\":\"Decile 7\",\"colorv\":9.09090909090909},{\"rev_rank\":3,\"ld_rev_rank\":8,\"n\":5413,\"prob\":0.1,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 8\",\"x\":2,\"y\":7,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 3\",\"yf\":\"Decile 8\",\"colorv\":10},{\"rev_rank\":3,\"ld_rev_rank\":9,\"n\":5216,\"prob\":0.1,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 9\",\"x\":2,\"y\":8,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 3\",\"yf\":\"Decile 9\",\"colorv\":10},{\"rev_rank\":3,\"ld_rev_rank\":10,\"n\":3490,\"prob\":0.07,\"Rank in Year t\":\"Decile 3\",\"Rank in Year t+1\":\"Decile 10\",\"x\":2,\"y\":9,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 3\",\"yf\":\"Decile 10\",\"colorv\":14.2857142857143},{\"rev_rank\":4,\"ld_rev_rank\":1,\"n\":2749,\"prob\":0.05,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 1\",\"x\":3,\"y\":0,\"value\":0.05,\"color\":\"#FDE725\",\"xf\":\"Decile 4\",\"yf\":\"Decile 1\",\"colorv\":20},{\"rev_rank\":4,\"ld_rev_rank\":2,\"n\":4044,\"prob\":0.08,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 2\",\"x\":3,\"y\":1,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 4\",\"yf\":\"Decile 2\",\"colorv\":12.5},{\"rev_rank\":4,\"ld_rev_rank\":3,\"n\":5574,\"prob\":0.11,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 3\",\"x\":3,\"y\":2,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 4\",\"yf\":\"Decile 3\",\"colorv\":9.09090909090909},{\"rev_rank\":4,\"ld_rev_rank\":4,\"n\":7060,\"prob\":0.14,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 4\",\"x\":3,\"y\":3,\"value\":0.14,\"color\":\"#3A2762\",\"xf\":\"Decile 4\",\"yf\":\"Decile 4\",\"colorv\":7.14285714285714},{\"rev_rank\":4,\"ld_rev_rank\":5,\"n\":8023,\"prob\":0.15,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 5\",\"x\":3,\"y\":4,\"value\":0.15,\"color\":\"#3F145B\",\"xf\":\"Decile 4\",\"yf\":\"Decile 5\",\"colorv\":6.66666666666667},{\"rev_rank\":4,\"ld_rev_rank\":6,\"n\":6004,\"prob\":0.12,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 6\",\"x\":3,\"y\":5,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 4\",\"yf\":\"Decile 6\",\"colorv\":8.33333333333333},{\"rev_rank\":4,\"ld_rev_rank\":7,\"n\":5736,\"prob\":0.11,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 7\",\"x\":3,\"y\":6,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 4\",\"yf\":\"Decile 7\",\"colorv\":9.09090909090909},{\"rev_rank\":4,\"ld_rev_rank\":8,\"n\":5027,\"prob\":0.1,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 8\",\"x\":3,\"y\":7,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 4\",\"yf\":\"Decile 8\",\"colorv\":10},{\"rev_rank\":4,\"ld_rev_rank\":9,\"n\":4396,\"prob\":0.08,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 9\",\"x\":3,\"y\":8,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 4\",\"yf\":\"Decile 9\",\"colorv\":12.5},{\"rev_rank\":4,\"ld_rev_rank\":10,\"n\":3334,\"prob\":0.06,\"Rank in Year t\":\"Decile 4\",\"Rank in Year t+1\":\"Decile 10\",\"x\":3,\"y\":9,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 4\",\"yf\":\"Decile 10\",\"colorv\":16.6666666666667},{\"rev_rank\":5,\"ld_rev_rank\":1,\"n\":2619,\"prob\":0.05,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 1\",\"x\":4,\"y\":0,\"value\":0.05,\"color\":\"#FDE725\",\"xf\":\"Decile 5\",\"yf\":\"Decile 1\",\"colorv\":20},{\"rev_rank\":5,\"ld_rev_rank\":2,\"n\":3340,\"prob\":0.06,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 2\",\"x\":4,\"y\":1,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 5\",\"yf\":\"Decile 2\",\"colorv\":16.6666666666667},{\"rev_rank\":5,\"ld_rev_rank\":3,\"n\":4445,\"prob\":0.09,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 3\",\"x\":4,\"y\":2,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 5\",\"yf\":\"Decile 3\",\"colorv\":11.1111111111111},{\"rev_rank\":5,\"ld_rev_rank\":4,\"n\":6271,\"prob\":0.12,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 4\",\"x\":4,\"y\":3,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 5\",\"yf\":\"Decile 4\",\"colorv\":8.33333333333333},{\"rev_rank\":5,\"ld_rev_rank\":5,\"n\":8337,\"prob\":0.16,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 5\",\"x\":4,\"y\":4,\"value\":0.16,\"color\":\"#440154\",\"xf\":\"Decile 5\",\"yf\":\"Decile 5\",\"colorv\":6.25},{\"rev_rank\":5,\"ld_rev_rank\":6,\"n\":9256,\"prob\":0.18,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 6\",\"x\":4,\"y\":5,\"value\":0.18,\"color\":\"#440154\",\"xf\":\"Decile 5\",\"yf\":\"Decile 6\",\"colorv\":5.55555555555556},{\"rev_rank\":5,\"ld_rev_rank\":7,\"n\":6097,\"prob\":0.12,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 7\",\"x\":4,\"y\":6,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 5\",\"yf\":\"Decile 7\",\"colorv\":8.33333333333333},{\"rev_rank\":5,\"ld_rev_rank\":8,\"n\":4585,\"prob\":0.09,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 8\",\"x\":4,\"y\":7,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 5\",\"yf\":\"Decile 8\",\"colorv\":11.1111111111111},{\"rev_rank\":5,\"ld_rev_rank\":9,\"n\":4112,\"prob\":0.08,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 9\",\"x\":4,\"y\":8,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 5\",\"yf\":\"Decile 9\",\"colorv\":12.5},{\"rev_rank\":5,\"ld_rev_rank\":10,\"n\":3122,\"prob\":0.06,\"Rank in Year t\":\"Decile 5\",\"Rank in Year t+1\":\"Decile 10\",\"x\":4,\"y\":9,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 5\",\"yf\":\"Decile 10\",\"colorv\":16.6666666666667},{\"rev_rank\":6,\"ld_rev_rank\":1,\"n\":3955,\"prob\":0.08,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 1\",\"x\":5,\"y\":0,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 6\",\"yf\":\"Decile 1\",\"colorv\":12.5},{\"rev_rank\":6,\"ld_rev_rank\":2,\"n\":2926,\"prob\":0.06,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 2\",\"x\":5,\"y\":1,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 6\",\"yf\":\"Decile 2\",\"colorv\":16.6666666666667},{\"rev_rank\":6,\"ld_rev_rank\":3,\"n\":4214,\"prob\":0.08,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 3\",\"x\":5,\"y\":2,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 6\",\"yf\":\"Decile 3\",\"colorv\":12.5},{\"rev_rank\":6,\"ld_rev_rank\":4,\"n\":5881,\"prob\":0.11,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 4\",\"x\":5,\"y\":3,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 6\",\"yf\":\"Decile 4\",\"colorv\":9.09090909090909},{\"rev_rank\":6,\"ld_rev_rank\":5,\"n\":7574,\"prob\":0.14,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 5\",\"x\":5,\"y\":4,\"value\":0.14,\"color\":\"#3A2762\",\"xf\":\"Decile 6\",\"yf\":\"Decile 5\",\"colorv\":7.14285714285714},{\"rev_rank\":6,\"ld_rev_rank\":6,\"n\":7396,\"prob\":0.14,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 6\",\"x\":5,\"y\":5,\"value\":0.14,\"color\":\"#3A2762\",\"xf\":\"Decile 6\",\"yf\":\"Decile 6\",\"colorv\":7.14285714285714},{\"rev_rank\":6,\"ld_rev_rank\":7,\"n\":7238,\"prob\":0.14,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 7\",\"x\":5,\"y\":6,\"value\":0.14,\"color\":\"#3A2762\",\"xf\":\"Decile 6\",\"yf\":\"Decile 7\",\"colorv\":7.14285714285714},{\"rev_rank\":6,\"ld_rev_rank\":8,\"n\":5433,\"prob\":0.1,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 8\",\"x\":5,\"y\":7,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 6\",\"yf\":\"Decile 8\",\"colorv\":10},{\"rev_rank\":6,\"ld_rev_rank\":9,\"n\":4476,\"prob\":0.09,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 9\",\"x\":5,\"y\":8,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 6\",\"yf\":\"Decile 9\",\"colorv\":11.1111111111111},{\"rev_rank\":6,\"ld_rev_rank\":10,\"n\":3302,\"prob\":0.06,\"Rank in Year t\":\"Decile 6\",\"Rank in Year t+1\":\"Decile 10\",\"x\":5,\"y\":9,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 6\",\"yf\":\"Decile 10\",\"colorv\":16.6666666666667},{\"rev_rank\":7,\"ld_rev_rank\":1,\"n\":3955,\"prob\":0.08,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 1\",\"x\":6,\"y\":0,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 7\",\"yf\":\"Decile 1\",\"colorv\":12.5},{\"rev_rank\":7,\"ld_rev_rank\":2,\"n\":4496,\"prob\":0.09,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 2\",\"x\":6,\"y\":1,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 7\",\"yf\":\"Decile 2\",\"colorv\":11.1111111111111},{\"rev_rank\":7,\"ld_rev_rank\":3,\"n\":4449,\"prob\":0.08,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 3\",\"x\":6,\"y\":2,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 7\",\"yf\":\"Decile 3\",\"colorv\":12.5},{\"rev_rank\":7,\"ld_rev_rank\":4,\"n\":6474,\"prob\":0.12,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 4\",\"x\":6,\"y\":3,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 7\",\"yf\":\"Decile 4\",\"colorv\":8.33333333333333},{\"rev_rank\":7,\"ld_rev_rank\":5,\"n\":5592,\"prob\":0.11,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 5\",\"x\":6,\"y\":4,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 7\",\"yf\":\"Decile 5\",\"colorv\":9.09090909090909},{\"rev_rank\":7,\"ld_rev_rank\":6,\"n\":5620,\"prob\":0.11,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 6\",\"x\":6,\"y\":5,\"value\":0.11,\"color\":\"#2C6079\",\"xf\":\"Decile 7\",\"yf\":\"Decile 6\",\"colorv\":9.09090909090909},{\"rev_rank\":7,\"ld_rev_rank\":7,\"n\":6657,\"prob\":0.13,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 7\",\"x\":6,\"y\":6,\"value\":0.13,\"color\":\"#363A6A\",\"xf\":\"Decile 7\",\"yf\":\"Decile 7\",\"colorv\":7.69230769230769},{\"rev_rank\":7,\"ld_rev_rank\":8,\"n\":6263,\"prob\":0.12,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 8\",\"x\":6,\"y\":7,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 7\",\"yf\":\"Decile 8\",\"colorv\":8.33333333333333},{\"rev_rank\":7,\"ld_rev_rank\":9,\"n\":5110,\"prob\":0.1,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 9\",\"x\":6,\"y\":8,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 7\",\"yf\":\"Decile 9\",\"colorv\":10},{\"rev_rank\":7,\"ld_rev_rank\":10,\"n\":3831,\"prob\":0.07,\"Rank in Year t\":\"Decile 7\",\"Rank in Year t+1\":\"Decile 10\",\"x\":6,\"y\":9,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 7\",\"yf\":\"Decile 10\",\"colorv\":14.2857142857143},{\"rev_rank\":8,\"ld_rev_rank\":1,\"n\":3483,\"prob\":0.07,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 1\",\"x\":7,\"y\":0,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 8\",\"yf\":\"Decile 1\",\"colorv\":14.2857142857143},{\"rev_rank\":8,\"ld_rev_rank\":2,\"n\":5096,\"prob\":0.1,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 2\",\"x\":7,\"y\":1,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 8\",\"yf\":\"Decile 2\",\"colorv\":10},{\"rev_rank\":8,\"ld_rev_rank\":3,\"n\":6516,\"prob\":0.12,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 3\",\"x\":7,\"y\":2,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 8\",\"yf\":\"Decile 3\",\"colorv\":8.33333333333333},{\"rev_rank\":8,\"ld_rev_rank\":4,\"n\":5033,\"prob\":0.1,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 4\",\"x\":7,\"y\":3,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 8\",\"yf\":\"Decile 4\",\"colorv\":10},{\"rev_rank\":8,\"ld_rev_rank\":5,\"n\":4043,\"prob\":0.08,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 5\",\"x\":7,\"y\":4,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 8\",\"yf\":\"Decile 5\",\"colorv\":12.5},{\"rev_rank\":8,\"ld_rev_rank\":6,\"n\":4466,\"prob\":0.08,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 6\",\"x\":7,\"y\":5,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 8\",\"yf\":\"Decile 6\",\"colorv\":12.5},{\"rev_rank\":8,\"ld_rev_rank\":7,\"n\":5439,\"prob\":0.1,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 7\",\"x\":7,\"y\":6,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 8\",\"yf\":\"Decile 7\",\"colorv\":10},{\"rev_rank\":8,\"ld_rev_rank\":8,\"n\":6903,\"prob\":0.13,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 8\",\"x\":7,\"y\":7,\"value\":0.13,\"color\":\"#363A6A\",\"xf\":\"Decile 8\",\"yf\":\"Decile 8\",\"colorv\":7.69230769230769},{\"rev_rank\":8,\"ld_rev_rank\":9,\"n\":6650,\"prob\":0.13,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 9\",\"x\":7,\"y\":8,\"value\":0.13,\"color\":\"#363A6A\",\"xf\":\"Decile 8\",\"yf\":\"Decile 9\",\"colorv\":7.69230769230769},{\"rev_rank\":8,\"ld_rev_rank\":10,\"n\":5216,\"prob\":0.1,\"Rank in Year t\":\"Decile 8\",\"Rank in Year t+1\":\"Decile 10\",\"x\":7,\"y\":9,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 8\",\"yf\":\"Decile 10\",\"colorv\":10},{\"rev_rank\":9,\"ld_rev_rank\":1,\"n\":5222,\"prob\":0.1,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 1\",\"x\":8,\"y\":0,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 9\",\"yf\":\"Decile 1\",\"colorv\":10},{\"rev_rank\":9,\"ld_rev_rank\":2,\"n\":8057,\"prob\":0.15,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 2\",\"x\":8,\"y\":1,\"value\":0.15,\"color\":\"#3F145B\",\"xf\":\"Decile 9\",\"yf\":\"Decile 2\",\"colorv\":6.66666666666667},{\"rev_rank\":9,\"ld_rev_rank\":3,\"n\":5435,\"prob\":0.1,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 3\",\"x\":8,\"y\":2,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 9\",\"yf\":\"Decile 3\",\"colorv\":10},{\"rev_rank\":9,\"ld_rev_rank\":4,\"n\":3889,\"prob\":0.07,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 4\",\"x\":8,\"y\":3,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 9\",\"yf\":\"Decile 4\",\"colorv\":14.2857142857143},{\"rev_rank\":9,\"ld_rev_rank\":5,\"n\":3367,\"prob\":0.06,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 5\",\"x\":8,\"y\":4,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 9\",\"yf\":\"Decile 5\",\"colorv\":16.6666666666667},{\"rev_rank\":9,\"ld_rev_rank\":6,\"n\":3565,\"prob\":0.07,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 6\",\"x\":8,\"y\":5,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 9\",\"yf\":\"Decile 6\",\"colorv\":14.2857142857143},{\"rev_rank\":9,\"ld_rev_rank\":7,\"n\":4465,\"prob\":0.08,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 7\",\"x\":8,\"y\":6,\"value\":0.08,\"color\":\"#A5C44E\",\"xf\":\"Decile 9\",\"yf\":\"Decile 7\",\"colorv\":12.5},{\"rev_rank\":9,\"ld_rev_rank\":8,\"n\":5563,\"prob\":0.1,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 8\",\"x\":8,\"y\":7,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 9\",\"yf\":\"Decile 8\",\"colorv\":10},{\"rev_rank\":9,\"ld_rev_rank\":9,\"n\":6891,\"prob\":0.13,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 9\",\"x\":8,\"y\":8,\"value\":0.13,\"color\":\"#363A6A\",\"xf\":\"Decile 9\",\"yf\":\"Decile 9\",\"colorv\":7.69230769230769},{\"rev_rank\":9,\"ld_rev_rank\":10,\"n\":6582,\"prob\":0.12,\"Rank in Year t\":\"Decile 9\",\"Rank in Year t+1\":\"Decile 10\",\"x\":8,\"y\":9,\"value\":0.12,\"color\":\"#314D71\",\"xf\":\"Decile 9\",\"yf\":\"Decile 10\",\"colorv\":8.33333333333333},{\"rev_rank\":10,\"ld_rev_rank\":1,\"n\":9035,\"prob\":0.17,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 1\",\"x\":9,\"y\":0,\"value\":0.17,\"color\":\"#440154\",\"xf\":\"Decile 10\",\"yf\":\"Decile 1\",\"colorv\":5.88235294117647},{\"rev_rank\":10,\"ld_rev_rank\":2,\"n\":5475,\"prob\":0.1,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 2\",\"x\":9,\"y\":1,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 10\",\"yf\":\"Decile 2\",\"colorv\":10},{\"rev_rank\":10,\"ld_rev_rank\":3,\"n\":4658,\"prob\":0.09,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 3\",\"x\":9,\"y\":2,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 10\",\"yf\":\"Decile 3\",\"colorv\":11.1111111111111},{\"rev_rank\":10,\"ld_rev_rank\":4,\"n\":3885,\"prob\":0.07,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 4\",\"x\":9,\"y\":3,\"value\":0.07,\"color\":\"#C2CF40\",\"xf\":\"Decile 10\",\"yf\":\"Decile 4\",\"colorv\":14.2857142857143},{\"rev_rank\":10,\"ld_rev_rank\":5,\"n\":3378,\"prob\":0.06,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 5\",\"x\":9,\"y\":4,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 10\",\"yf\":\"Decile 5\",\"colorv\":16.6666666666667},{\"rev_rank\":10,\"ld_rev_rank\":6,\"n\":3332,\"prob\":0.06,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 6\",\"x\":9,\"y\":5,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 10\",\"yf\":\"Decile 6\",\"colorv\":16.6666666666667},{\"rev_rank\":10,\"ld_rev_rank\":7,\"n\":3446,\"prob\":0.06,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 7\",\"x\":9,\"y\":6,\"value\":0.06,\"color\":\"#FDE725\",\"xf\":\"Decile 10\",\"yf\":\"Decile 7\",\"colorv\":16.6666666666667},{\"rev_rank\":10,\"ld_rev_rank\":8,\"n\":4786,\"prob\":0.09,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 8\",\"x\":9,\"y\":7,\"value\":0.09,\"color\":\"#6AAD69\",\"xf\":\"Decile 10\",\"yf\":\"Decile 8\",\"colorv\":11.1111111111111},{\"rev_rank\":10,\"ld_rev_rank\":9,\"n\":5570,\"prob\":0.1,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 9\",\"x\":9,\"y\":8,\"value\":0.1,\"color\":\"#2F9585\",\"xf\":\"Decile 10\",\"yf\":\"Decile 9\",\"colorv\":10},{\"rev_rank\":10,\"ld_rev_rank\":10,\"n\":9913,\"prob\":0.19,\"Rank in Year t\":\"Decile 10\",\"Rank in Year t+1\":\"Decile 10\",\"x\":9,\"y\":9,\"value\":0.19,\"color\":\"#440154\",\"xf\":\"Decile 10\",\"yf\":\"Decile 10\",\"colorv\":5.26315789473684}],\"type\":\"heatmap\",\"opacity\":0.8,\"name\":\"Transition Probability\"}],\"xAxis\":{\"type\":\"category\",\"title\":{\"text\":\"Rank in Year t\"},\"categories\":[\"Decile 1\",\"Decile 2\",\"Decile 3\",\"Decile 4\",\"Decile 5\",\"Decile 6\",\"Decile 7\",\"Decile 8\",\"Decile 9\",\"Decile 10\"]},\"tooltip\":{\"pointFormat\":\"Previous Decile: {point.x} <br> New Decile: {point.y} <br> Probability: {point.value}\"},\"legend\":[]},\"theme\":{\"colors\":[\"#0266C8\",\"#F90101\",\"#F2B50F\",\"#00933B\"],\"chart\":{\"style\":{\"fontFamily\":\"Roboto\",\"color\":\"#444444\"}},\"xAxis\":{\"gridLineWidth\":1,\"gridLineColor\":\"#F3F3F3\",\"lineColor\":\"#F3F3F3\",\"minorGridLineColor\":\"#F3F3F3\",\"tickColor\":\"#F3F3F3\",\"tickWidth\":1},\"yAxis\":{\"gridLineColor\":\"#F3F3F3\",\"lineColor\":\"#F3F3F3\",\"minorGridLineColor\":\"#F3F3F3\",\"tickColor\":\"#F3F3F3\",\"tickWidth\":1},\"legendBackgroundColor\":\"rgba(0, 0, 0, 0.5)\",\"background2\":\"#505053\",\"dataLabelsColor\":\"#B0B0B3\",\"textColor\":\"#C0C0C0\",\"contrastTextColor\":\"#F0F0F3\",\"maskColor\":\"rgba(255,255,255,0.3)\"},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"drillUpText\":\"Back to {series.name}\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"thousandsSep\":\" \",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":\"Roboto\",\"debug\":false},\"evals\":[],\"jsHooks\":[]}\nIn this heatmap, things look a bit more interesting. We can see that the primary and secondary diagonal elements are darker than the off diagonal elements. Following the standard notations in linear algbra, the primary diagonal runs from top left to bottom right. The dark rectangles towards the ends of the diagonal suggest that there is a higher transition probability from low deciles to high deciles and vice versa. The secondary diagonal runs from bottom left to top right. This diagonal captures persistence in performance. The elements on this diagonal are darker suggesting some evidence of persistence. However, the highest probability is 22% for Decile 1. For Decile 9 and 10, these are 13% and 19% respectively. Thus, the evidence for persistence is weak at best. ALso note that although I extended the time period under investigation to 2019, the results are remarkably similar to what Carhart reported in 1997!\n3-Dimensional Bar Plot using echarts4r\nI wanted to more closely replicate Carhart’s visualization. I decided to use echarts4r to recreate this plot because this package has an easy way to create 3-d plots. However, it has a few limitations as well. R package has only a few functionalities of the original echarts library. I am not proficient in JavaScript so I can’t make finer changes to the plot. Let’s give it a shot. Note that the X axis has the deciles in year t, Y axis has the deciles in year t+1, and the Z axis has the probabilities.\n\n\n{\"x\":{\"theme\":\"blue\",\"tl\":false,\"draw\":true,\"renderer\":\"canvas\",\"events\":[],\"buttons\":[],\"opts\":{\"xAxis3D\":[{\"type\":\"category\",\"data\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"]}],\"yAxis3D\":[{\"type\":\"category\",\"data\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"]}],\"zAxis3D\":[{\"type\":\"value\"}],\"grid3D\":[{\"show\":true}],\"legend\":{\"data\":[\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\",\"Probability of Switching\"],\"show\":false,\"type\":\"plain\"},\"series\":[{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"1\",\"1\",\"0.22\"]},{\"value\":[\"1\",\"2\",\"0.09\"]},{\"value\":[\"1\",\"3\",\"0.10\"]},{\"value\":[\"1\",\"4\",\"0.06\"]},{\"value\":[\"1\",\"5\",\"0.05\"]},{\"value\":[\"1\",\"6\",\"0.08\"]},{\"value\":[\"1\",\"7\",\"0.05\"]},{\"value\":[\"1\",\"8\",\"0.07\"]},{\"value\":[\"1\",\"9\",\"0.10\"]},{\"value\":[\"1\",\"10\",\"0.17\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"2\",\"1\",\"0.11\"]},{\"value\":[\"2\",\"2\",\"0.15\"]},{\"value\":[\"2\",\"3\",\"0.11\"]},{\"value\":[\"2\",\"4\",\"0.09\"]},{\"value\":[\"2\",\"5\",\"0.08\"]},{\"value\":[\"2\",\"6\",\"0.08\"]},{\"value\":[\"2\",\"7\",\"0.08\"]},{\"value\":[\"2\",\"8\",\"0.09\"]},{\"value\":[\"2\",\"9\",\"0.11\"]},{\"value\":[\"2\",\"10\",\"0.09\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"3\",\"1\",\"0.07\"]},{\"value\":[\"3\",\"2\",\"0.13\"]},{\"value\":[\"3\",\"3\",\"0.13\"]},{\"value\":[\"3\",\"4\",\"0.12\"]},{\"value\":[\"3\",\"5\",\"0.09\"]},{\"value\":[\"3\",\"6\",\"0.08\"]},{\"value\":[\"3\",\"7\",\"0.11\"]},{\"value\":[\"3\",\"8\",\"0.10\"]},{\"value\":[\"3\",\"9\",\"0.10\"]},{\"value\":[\"3\",\"10\",\"0.07\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"4\",\"1\",\"0.05\"]},{\"value\":[\"4\",\"2\",\"0.08\"]},{\"value\":[\"4\",\"3\",\"0.11\"]},{\"value\":[\"4\",\"4\",\"0.14\"]},{\"value\":[\"4\",\"5\",\"0.15\"]},{\"value\":[\"4\",\"6\",\"0.12\"]},{\"value\":[\"4\",\"7\",\"0.11\"]},{\"value\":[\"4\",\"8\",\"0.10\"]},{\"value\":[\"4\",\"9\",\"0.08\"]},{\"value\":[\"4\",\"10\",\"0.06\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"5\",\"1\",\"0.05\"]},{\"value\":[\"5\",\"2\",\"0.06\"]},{\"value\":[\"5\",\"3\",\"0.09\"]},{\"value\":[\"5\",\"4\",\"0.12\"]},{\"value\":[\"5\",\"5\",\"0.16\"]},{\"value\":[\"5\",\"6\",\"0.18\"]},{\"value\":[\"5\",\"7\",\"0.12\"]},{\"value\":[\"5\",\"8\",\"0.09\"]},{\"value\":[\"5\",\"9\",\"0.08\"]},{\"value\":[\"5\",\"10\",\"0.06\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"6\",\"1\",\"0.08\"]},{\"value\":[\"6\",\"2\",\"0.06\"]},{\"value\":[\"6\",\"3\",\"0.08\"]},{\"value\":[\"6\",\"4\",\"0.11\"]},{\"value\":[\"6\",\"5\",\"0.14\"]},{\"value\":[\"6\",\"6\",\"0.14\"]},{\"value\":[\"6\",\"7\",\"0.14\"]},{\"value\":[\"6\",\"8\",\"0.10\"]},{\"value\":[\"6\",\"9\",\"0.09\"]},{\"value\":[\"6\",\"10\",\"0.06\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"7\",\"1\",\"0.08\"]},{\"value\":[\"7\",\"2\",\"0.09\"]},{\"value\":[\"7\",\"3\",\"0.08\"]},{\"value\":[\"7\",\"4\",\"0.12\"]},{\"value\":[\"7\",\"5\",\"0.11\"]},{\"value\":[\"7\",\"6\",\"0.11\"]},{\"value\":[\"7\",\"7\",\"0.13\"]},{\"value\":[\"7\",\"8\",\"0.12\"]},{\"value\":[\"7\",\"9\",\"0.10\"]},{\"value\":[\"7\",\"10\",\"0.07\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"8\",\"1\",\"0.07\"]},{\"value\":[\"8\",\"2\",\"0.10\"]},{\"value\":[\"8\",\"3\",\"0.12\"]},{\"value\":[\"8\",\"4\",\"0.10\"]},{\"value\":[\"8\",\"5\",\"0.08\"]},{\"value\":[\"8\",\"6\",\"0.08\"]},{\"value\":[\"8\",\"7\",\"0.10\"]},{\"value\":[\"8\",\"8\",\"0.13\"]},{\"value\":[\"8\",\"9\",\"0.13\"]},{\"value\":[\"8\",\"10\",\"0.10\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"9\",\"1\",\"0.10\"]},{\"value\":[\"9\",\"2\",\"0.15\"]},{\"value\":[\"9\",\"3\",\"0.10\"]},{\"value\":[\"9\",\"4\",\"0.07\"]},{\"value\":[\"9\",\"5\",\"0.06\"]},{\"value\":[\"9\",\"6\",\"0.07\"]},{\"value\":[\"9\",\"7\",\"0.08\"]},{\"value\":[\"9\",\"8\",\"0.10\"]},{\"value\":[\"9\",\"9\",\"0.13\"]},{\"value\":[\"9\",\"10\",\"0.12\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}},{\"name\":\"Probability of Switching\",\"type\":\"bar3D\",\"coordinateSystem\":\"cartesian3D\",\"data\":[{\"value\":[\"10\",\"1\",\"0.17\"]},{\"value\":[\"10\",\"2\",\"0.10\"]},{\"value\":[\"10\",\"3\",\"0.09\"]},{\"value\":[\"10\",\"4\",\"0.07\"]},{\"value\":[\"10\",\"5\",\"0.06\"]},{\"value\":[\"10\",\"6\",\"0.06\"]},{\"value\":[\"10\",\"7\",\"0.06\"]},{\"value\":[\"10\",\"8\",\"0.09\"]},{\"value\":[\"10\",\"9\",\"0.10\"]},{\"value\":[\"10\",\"10\",\"0.19\"]}],\"itemStyle\":{\"opacity\":0.4},\"emphasis\":{\"itemStyle\":{\"color\":\"#313695\",\"opacity\":1}}}],\"tooltip\":{\"trigger\":\"item\"}},\"dispose\":true},\"evals\":[],\"jsHooks\":[]}\nThis plot is not bad at all! It has a lot of details and we can rotate the plot to get an understanding of the tranistion probabilities. Ideally I would have loved to assign the same color to the columns belonging to a decile in year t+1 but I found it difficult to achieve. I will keep exploring this.\n3-Dimensional highcharter Bar Plot\nAs an alternative I decided to use highcharter library which is a wrapper for highcharts. However, there is no easy way to rotate the plot. So I am going to show you two plots - one without rotation and the other with. The one with rotation is actually hosted on Shinyapps.io as a Shiny app.\nNote that in both the plots, the same color is applied to the bars for the decile in year t+1. This is shown in the legend at the bottom of the plots.\nStatic highcharter plot\n\n\n\n\n\n{\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"column\",\"options3d\":{\"enabled\":true,\"beta\":20,\"alpha\":30,\"depth\":400,\"viewDistance\":5}},\"title\":{\"text\":\"Persistence in Mutual Fund Performance\"},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"edgeColor\":\"#FFFFFF\",\"groupZpadding\":0,\"depth\":100,\"groupPadding\":0,\"grouping\":false,\"frame\":{\"bottom\":{\"size\":1,\"color\":\"rgba(0,0,0,0.05)\"}}},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"xAxis\":{\"categories\":[\"Decile_1\",\"Decile_2\",\"Decile_3\",\"Decile_4\",\"Decile_5\",\"Decile_6\",\"Decile_7\",\"Decile_8\",\"Decile_9\",\"Decile_10\"],\"labels\":{\"rotation\":0}},\"colors\":[\"#FDE725FF\",\"#B8DE29FF\",\"#73D055FF\",\"#3CBB75FF\",\"#20A387FF\",\"#238A8DFF\",\"#2D708EFF\",\"#39568CFF\",\"#453781FF\",\"#481567FF\"],\"series\":[{\"name\":\"Decile_1\",\"data\":[0.22499506026477,0.107417678996914,0.0708318058155016,0.0529193216162627,0.0501877970259083,0.0754843019372077,0.0754094609796556,0.0659097360204371,0.0984614224300475,0.168947978608026]},{\"name\":\"Decile_2\",\"data\":[0.0922149772772179,0.153802585836491,0.126227641962684,0.0778485764336728,0.0640042925034493,0.0558450233800935,0.0857246362995024,0.0964329643296433,0.151915679915529,0.10237854818804]},{\"name\":\"Decile_3\",\"data\":[0.0956925508792729,0.113784617788368,0.132402029830011,0.107301672858875,0.0851793653227043,0.0804275217100868,0.0848284935267985,0.123304002270792,0.102477562410438,0.0871012378922174]},{\"name\":\"Decile_4\",\"data\":[0.0601066982809721,0.0875747041131206,0.118007988114303,0.135907752131981,0.1201709336195,0.112243534688424,0.123438900223082,0.0952407985618318,0.0733275510973678,0.0726466958375407]},{\"name\":\"Decile_5\",\"data\":[0.0545544358822367,0.0825748994179915,0.0909371563084879,0.15444587752902,0.159761612754867,0.144555778223113,0.106621923084256,0.0765067650676507,0.0634851798778188,0.0631661617861551]},{\"name\":\"Decile_6\",\"data\":[0.0829282750444576,0.0810124604507636,0.0784147259150636,0.115579340481645,0.17737237467423,0.141158507491173,0.107155795374378,0.084511306651528,0.0672184930990271,0.0623059949885934]},{\"name\":\"Decile_7\",\"data\":[0.0524599881446354,0.0848404359204719,0.110753082370193,0.110420236009779,0.116836578261536,0.13814295257181,0.126928136976376,0.102923644621062,0.0841880986499736,0.0644377127042896]},{\"name\":\"Decile_8\",\"data\":[0.0716261608377791,0.0912269051990157,0.104443629768268,0.09677170962712,0.0878621799785375,0.103693100486688,0.119415791179667,0.130627306273063,0.104891017422128,0.0894947455028236]},{\"name\":\"Decile_9\",\"data\":[0.0976091681485872,0.105093551033163,0.100642522237444,0.0846247136504514,0.0787980990341867,0.0854279988548526,0.0974316929471657,0.125839719935661,0.129930613168414,0.104154979617787]},{\"name\":\"Decile_10\",\"data\":[0.167812685240071,0.0926721612437014,0.0673394176780443,0.0641807996611931,0.0598267668250805,0.0630212806565512,0.0730451694091178,0.0987037562683319,0.124104381929256,0.185365944874528]}]},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"drillUpText\":\"Back to {series.name}\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"thousandsSep\":\" \",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}\nWith highcharter, I could assign distinct colors to the deciles. This makes it easier compared to echarts4r to explore transition probabilities. However, we can’t rotate this plot.\nHow to read this plot? The front row of columns belong to Decile 1 from year t+1. From left to right, we can see the Decile 1 to Decile 10 from year t. Thus, the left most column is the probability that a fund will stay in Decile 1 the next year. The second column from left is the probability that a fund will move from Decile 1 in year t to Decile 2 in year t+1. The second row of columns belongs to Decile 2 from year t+1 and so on.\nDraggable highcharter bar plot\nI decided to host my plot on Shinyapps.io as a Shiny app, which made it possible to drag or rotate the bar plot. Now you are free to play with it! The way to read the plot is the same as the static plot.\n\n\n\n\nConclusion\nFigure 1 from Carhart’s article is insightful but it suffers from several issues. Using modern technology, we can recreate this figure in multiple ways. I show four ways to recreate it using JavaScript based libraries in R. Although I used data spanning 1961 to 2019, the conclusions from Carhart’s article remain the same. This shows that his findings were really robust.\n\n\n\nCarhart, Mark M. 1997. “On Persistence in Mutual Fund Performance.” The Journal of Finance 52 (1): 57–82.\n\n\nFama, Eugene F, and Kenneth R French. 1993. “Common Risk Factors in the Returns on Stocks and Bonds.” Journal of Financial Economics 33 (1): 3–56.\n\n\nJegadeesh, Narasimhan, and Sheridan Titman. 1993. “Returns to Buying Winners and Selling Losers: Implications for Stock Market Efficiency.” The Journal of Finance 48 (1): 65–91.\n\n\n\n\n",
    "preview": "posts/2020-11-30-mf-performance/distill-preview.png",
    "last_modified": "2020-12-01T17:22:24-06:00",
    "input_file": {},
    "preview_width": 1570,
    "preview_height": 1274
  },
  {
    "path": "posts/2020-11-20--us-election-donut/",
    "title": "Donut Chart and Geofacets",
    "description": "How to combine a donut chart with geofacets in R.",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-11-19",
    "categories": [],
    "contents": "\nThere are many different ways people have visualized US presidential elections results on the US map. One critical drawback in many of these visualizations is that they show only the results for the winners. I wanted to show the vote percentages for Biden, Trump, and other candidates. These can be easily captured using a pie chart or a donut chart. However, superimposing the charts on the US map is difficult because the sizes of the states vary quite a lot. So I decided to use the fantastic geofacet package, which makes this task easy.\nGetting the data\nAs of the date of this writing (21st November 2020), the results of the US Presidential elections have not tallied. The counting is still going on in a few states. However, it is unlikely that the results will change significantly from this point onward. I decided to get data from this Github repo, which scrapes data from NYT. The data is at county-level: https://github.com/favstats/USElection2020-NYT-Results\nI am reading the data directly into R.\n\n\ndt <- readr::read_csv(\"https://bit.ly/2UO2Zyp\")\n\n\n\n\n\n\nCleaning up the data\nI clean up the data in multiple steps using dplyr:\nGet total votes and absentee votes for all the contentstansts other than Trump and Biden.\nstate names have - in place of a space. For instance, New York is written “as new-york”. Replace all the hyphens with spaces.\nUse title case for all the state names. This screws up District of Columbia by capitalizing “O” in of. Fix that.\nSummarize the votes at the state level.\nReshape the data using pivot_longer. This will lead to only five columns.\nFinally, calculate the percentage votes.\n\nAbsentee votes for some states were negative so I decided not to use absentee votes in any visualization.\n\n\n# Load the libraries\npacman::p_load(tidyverse, showtext, geofacet)\n\ndt2 <- dt %>% \n  mutate(\n         Others = votes  - (results_trumpd + results_bidenj),\n         Others_ab = absentee_votes - (results_absentee_trumpd + results_absentee_trumpd),\n         state = stringr::str_replace_all(state, \"-\", \" \"),\n         state = stringr::str_to_title(state),\n         state = ifelse(state == \"District Of Columbia\", \"District of Columbia\",  state)\n         ) %>% \n  group_by(state) %>% \n  summarize(Trump_votes = sum(results_trumpd, na.rm = TRUE),\n            Trump_abvotes = sum(results_absentee_trumpd, na.rm = TRUE),\n            Biden_votes = sum(results_bidenj, na.rm = TRUE),\n            Biden_abvotes = sum(results_absentee_bidenj, na.rm = TRUE),\n            Others_votes = sum(Others , na.rm = TRUE),\n            Others_abvotes = sum(Others_ab , na.rm = TRUE),\n            .groups = \"drop\") %>% \n  pivot_longer(cols = c(Trump_votes, Biden_votes, Others_votes,\n                        Trump_abvotes, Biden_abvotes, Others_abvotes),\n               names_to = c(\"Candidate\", \".value\"),\n               names_pattern = \"(.+)_(.+)\") %>% \n  group_by(state) %>% \n    mutate(per_votes = votes / sum(votes)) %>% \n  ungroup()\n\n\n\nCreating the plots\nI am starting off by importing Proxima Nova Condensed font. If you don’t have this font, use whichever font you like. I recommend using a condensed font. A popular alternative is Robot Condensed.\nI also start showtext.\n\n\nfont_add(\"proxima\", here::here(\"Icons\", \"ProximaNovaCond-Regular.otf\"))\nshowtext_auto()\n\n\n\nNow we are reading to create the plot. Recall that I am overlaying donut charts on the US map but instead of actually using the map, I will instead use geofacet package. This allows us to position facets in the general location of states on the US map.\nI like this package because due to the distortion introduced by the map projections, many states on the US map look smaller than they are. A few states are indeed small. Also, Alaska and Hawaii are so far away from the continental US that it becomes difficult to show them in one map unless we make some adjustments.\nI will show you two different methods to create this graph.\nMethod 1\nIn this method, I will first create a bar graph and then use polar coordinates to convert them into a pie chart. Next, using xlim() function, I will convert the pie chart into a donut chart. Play around with the values inside xlim in the code below to see how the plot changes.\nThis plot will not put the vote percentages as labels on the plot, which will make the plots a bit less interesting. In the next method I will show you how to put the value labels.\n\n\ng1 <- dt2 %>% \n  group_by(state) %>% \n  arrange(Candidate) %>% \n  ungroup() %>% \n  ggplot(aes(x = 1.4, y = per_votes, fill = Candidate)) +\n  geom_col(color = \"white\", width = 0.7) +\n  coord_polar(theta = \"y\", start = 0) +\n  facet_geo(~state) +\n  scale_fill_manual(values = c(\"#0066f2\", \"#e9c41d\", \"#ff0000\")) +\n  theme_void()+\n  xlim(0, 2) +\n  labs(caption = \"Ashwin Malshe \\nhttps://dataviz.school\",\n       subtitle = \" \") +\n  theme(legend.text = element_text(family = \"proxima\", size = 10),\n        legend.title = element_blank(),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.2, 1),\n        plot.caption = element_text(family = \"proxima\", size = 10, hjust = 0.95,\n                                    margin = margin(0, 0, 5, 0, \"pt\"),\n                                    face = \"bold\", color = \"#1500f4\"),\n        strip.text = element_text(family = \"proxima\", size = 9,\n                                  margin = margin(0, 0, 5, 0, \"pt\"))) \n\n# Print the plot\ng1\n\n\n\n\n\n\n\nIf you like it, save the plot using ggsave() function.\nMethod 2\nIn the second method, I will use geom_rect to add rectangles first and then use polar coordinates to create a pie chart. Once again he limits specified inside xlim() will convert it into a donut chart.\n\n\ng2 <- dt2 %>% \n  group_by(state) %>% \n  arrange(Candidate) %>% \n  mutate(ymax = cumsum(per_votes),\n         ymin = ifelse(row_number() == 1, 0, lag(ymax)),\n         ypos = (ymin + ymax) / 2,\n         ypos = ifelse(state == \"District of Columbia\" & Candidate == \"Trump\",\n                       0.05, ypos)) %>% \n  ungroup() %>% \n  ggplot(aes(ymin = ymin, ymax = ymax, xmin = 3, xmax = 4, fill = Candidate)) +\n  geom_rect() +\n  geom_text(x = 1.8, \n             aes(y = ypos, label = formattable::percent(round(per_votes, 2), digits = 0)),\n             size = 2) +\n  coord_polar(theta = \"y\") +\n  facet_geo(~state) +\n  scale_fill_manual(values = c(\"#0066f2\", \"#e6f1fd\", \"#ff0000\")) +\n  theme_void()+\n  xlim(-1, 4) +\n  labs(caption = \"Ashwin Malshe \\nhttps://dataviz.school\",\n       subtitle = \" \") +\n  theme(legend.text = element_text(family = \"proxima\", size = 10),\n        legend.title = element_blank(),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.2, 1),\n        plot.caption = element_text(family = \"proxima\", size = 10, hjust = 0.95,\n                                    margin = margin(0, 0, 5, 0, \"pt\"),\n                                    face = \"bold\", color = \"#1500f4\"),\n        strip.text = element_text(family = \"proxima\", size = 9,\n                                  margin = margin(0, 0, 5, 0, \"pt\")))\n\n\n# Print the plot\n\ng2\n\n\n\n\n\n\n\nAnother version of the same plot with a different background.\n\n\ng3 <- dt2 %>% \n  group_by(state) %>% \n  arrange(Candidate) %>% \n  mutate(ymax = cumsum(per_votes),\n         ymin = ifelse(row_number() == 1, 0, lag(ymax)),\n         ypos = (ymin + ymax) / 2,\n                  ypos = ifelse(state == \"District of Columbia\" & Candidate == \"Trump\",\n                       0.05, ypos)) %>% \n  ungroup() %>% \n  ggplot(aes(ymin = ymin, ymax = ymax, xmin = 3, xmax = 4, fill = Candidate)) +\n  geom_rect() +\n  geom_text(x = 1.8, \n             aes(y = ypos, \n                 label = formattable::percent(round(per_votes, 2), digits = 0)),\n             size = 2, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  facet_geo(~state) +\n  scale_fill_manual(values = c(\"#0066f2\", \"#e6f1fd\", \"#ff0000\")) +\n  theme_void()+\n  xlim(-1, 4) +\n  labs(caption = \"Ashwin Malshe \\nhttps://dataviz.school\",\n       subtitle = \" \") +\n  theme(legend.text = element_text(family = \"proxima\", size = 10, color = \"white\"),\n        legend.title = element_blank(),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.2, 1),\n        plot.caption = element_text(family = \"proxima\", size = 10, hjust = 0.95,\n                                    margin = margin(0, 0, 5, 0, \"pt\"),\n                                    face = \"bold\", color = \"#a3be8c\"),\n        strip.text = element_text(family = \"proxima\", size = 9, color = \"white\",\n                                  margin = margin(0, 0, 5, 0, \"pt\")),\n        plot.background = element_rect(fill = \"#2e3440\", color = NA),\n        panel.background = element_rect(fill = \"#2e3440\", color = NA) )\n\n\n# Print the plot\n\ng3\n\n\n\n\n\n\n\n\n\n\n",
    "preview": "posts/2020-11-20--us-election-donut/distill-preview.png",
    "last_modified": "2020-11-21T22:03:36-06:00",
    "input_file": {},
    "preview_width": 2112,
    "preview_height": 1632
  },
  {
    "path": "posts/2020-10-31-plotting-election-win-probabilities/",
    "title": "Mapping Election Win Probabilities",
    "description": "I show how to create a election map using ggplot2",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-10-31",
    "categories": [],
    "contents": "\nIn this post, I will show you how to make a map using ggplot2. For this, I am going to use an excellent post by Andrew Gelman.\nFivethirtyeight daily updates the probabilities of Trump and Biden wins based on multiple polls and their own model.1 They also make available their simulation outcomes as a json file. Next, I merged the cleaned simulation data with US map data. I will create a separate post to show you how to read, clean, and merge these data sets.\nRead the data sets and load packages\nI have saved all the required data sets as a .rda file on Github. You can directly read them into your R code without saving it first.\n\n\nload(url(\"https://github.com/ashgreat/DA6233/blob/master/sim-elect.rda?raw=true\"))\n\n\n\nI will use ggrepel package to make sure that the state labels don’t overlap. If you don’t have this package installed, run install.packages(\"ggrepel\") in the RStudio console.\n\n\nlibrary(tidyverse)\nlibrary(ggrepel)\n\n\n\nMaking the map\nNow we are ready to make the map. We will use trump_wins data set. This data set has results of 40,000 simulations. Each simulation shows whether Trump will win or lose a state. There are results for 50 states and Washington D.C. There are five more results for, what I think is, regional data. We will not use those results.\nTrump probability of winning each state is simply the column means of this data set. In the following code the first four lines calculate the probabilities and restructure the data so that it is easier to merge with the data on maps.\n\n\ndt <- trump_wins %>% \n  summarize(across(everything(), mean)) %>%\n  mutate(across(everything(), ~ round(.x * 100, 2))) %>% \n  pivot_longer(cols = everything(), names_to = \"state_abb\", values_to = \"prob\") %>% \n  inner_join(select(state_names, -lat, -long), by = \"state_abb\") %>% \n  inner_join(fifty_states, by = c(\"state_low\" = \"id\"))\n\n\n\nFinally, we create a map using dt. The labels of the states are split into two groups. Many northeastern states show up small on the map so their names are no readable easily. Therefore, we need to show them a little bit away from the map. For this we will use geom_text_repel() function from ggrepel package.\n\n\ndt %>%\n  ggplot(aes(x = long, y = lat)) +\n  geom_polygon(aes(group = group, fill = prob), color = \"#d8dee9\", size = 0.05) +\n  geom_text(data = filter(state_label, \n                          !state_abb %in% c(\"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"DC\", \"MD\")), \n            aes(label = state_abb), \n            size = 3, hjust = 0.5, family = \"Roboto Condensed\") +\n  geom_text_repel(data = filter(state_label, \n                                state_abb %in% c(\"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"DC\", \"MD\")),\n                  aes(label = state_abb), \n                  nudge_x = 5, \n                  segment.size  = 0.2, \n                  segment.color = \"grey50\",\n                  direction     = \"y\", \n                  size = 3, \n                  hjust = 0.5, \n                  family = \"Roboto Condensed\") +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  scale_fill_gradient2(low = \"#0063c4\", \n                       mid = \"#d8dee9\", \n                       high = \"#ef2e69\",\n                       midpoint = 50,\n                       labels = c(\"0%\", \"25%\", \"50%\", \"75%\", \"100%\"),\n                       guide = guide_colorbar(barwidth = 10, \n                                              barheight = 0.4,\n                                              title.position = \"top\")) + \n  labs(fill = \"Probability of Trump Winning a State\") +\n  ggthemes::theme_map() +\n  theme(legend.position = c(0.3, -0.2),\n        legend.direction= \"horizontal\",\n        legend.title = element_text(family = \"Roboto Condensed\")) \n\n\n\n\n\nYou can check out the maps and other information on their website: https://projects.fivethirtyeight.com/trump-biden-election-map/↩︎\n",
    "preview": "posts/2020-10-31-plotting-election-win-probabilities/plotting-election-win-probabilities_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2020-11-01T14:40:24-06:00",
    "input_file": {},
    "preview_width": 1152,
    "preview_height": 1152
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to R Data Visualization",
    "description": "Welcome to my new blog, R Data Visualization. I hope youe enjoy the code\nand visualizations!",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-10-31",
    "categories": [],
    "contents": "\nMy main website is ashwinmalshe.com. However, due to some configurations issues, I am unable to update it. It has made it difficult for me to post new blog posts. Therefore, while I am porting my website to another project, I decided to start this blog. Here I am gradually making available all the old posts from my website. In addition, I will add new material.\n\n\n\n",
    "preview": {},
    "last_modified": "2020-10-31T23:07:24-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-10-31-plotting-covid-19-pandemic/",
    "title": "Plotting Covid-19 Pandemic",
    "description": "Interactive plot of Covid-19 cases",
    "author": [
      {
        "name": "Ashwin Malshe",
        "url": "www.ashwinmalshe.com"
      }
    ],
    "date": "2020-03-08",
    "categories": [],
    "contents": "\nIn this post, we will visualize spread of worldwide COVID-19 cases through time. I obtained the data from Rami Krispin’s website: https://ramikrispin.github.io/coronavirus/ using coronovirus package. I also decided to do some experimentation using John Coene’s fantastic echarts4r package, which allows us to access echarts API.\nLoad the libraries and get the data in the R session.\n\n\nlibrary(dplyr)\nlibrary(echarts4r)\nlibrary(coronavirus)\n\n# Get the data\ndata(\"coronavirus\")\n\n\n\nData Preparation\nPrint out the first 6 observations.\n\n\nhead(coronavirus)\n\n\n        date province     country      lat     long      type cases\n1 2020-01-22          Afghanistan 33.93911 67.70995 confirmed     0\n2 2020-01-23          Afghanistan 33.93911 67.70995 confirmed     0\n3 2020-01-24          Afghanistan 33.93911 67.70995 confirmed     0\n4 2020-01-25          Afghanistan 33.93911 67.70995 confirmed     0\n5 2020-01-26          Afghanistan 33.93911 67.70995 confirmed     0\n6 2020-01-27          Afghanistan 33.93911 67.70995 confirmed     0\n\nWe are interested in date and type. Let’s take a look at the distinct values for type.\n\n\ncoronavirus %>% count(type)\n\n\n       type     n\n1 confirmed 75576\n2     death 75576\n3 recovered 71910\n\nThere are only 3 values: confirmed, death, and recovered. Next we will create sum of cases for each of the values and store them in separate data sets.\n\n\ndt1 <- coronavirus %>% \n  filter(type == \"confirmed\") %>% \n  group_by(date) %>% \n  summarize(Confirmed = sum(cases, na.rm = TRUE), .groups = \"drop\")\n\ndt2 <- coronavirus %>% \n  filter(type == \"death\") %>% \n  group_by(date) %>% \n  summarize(Death = sum(cases, na.rm = TRUE), .groups = \"drop\")\n\n\ndt3 <- coronavirus %>% \n  filter(type == \"recovered\") %>% \n  group_by(date) %>% \n  summarize(Recovered = sum(cases, na.rm = TRUE), .groups = \"drop\")\n\n\n\nFinally, we will merge the 3 datasets so that we will have the counts of each type in separate columns.\n\n\ndt <- dt1 %>% \n  inner_join(dt2, by = \"date\") %>% \n  inner_join(dt3, by = \"date\")\n\n\n\nPlot\nFinally, time to make the plot! Note how we can build this plot in separate elements.\n\n\ndt %>% \n  e_charts(x = date) %>% \n  e_line(serie = Confirmed) %>% \n  e_line(serie = Death) %>% \n  e_line(serie = Recovered) %>% \n  e_tooltip(trigger = \"axis\") %>% \n  e_datazoom(type = \"slider\") %>% \n  e_title(\"Worldwide COVID-19 cases\") %>% \n  e_theme(\"bee-insipired\") \n\n\n\n{\"x\":{\"theme\":\"bee-insipired\",\"tl\":false,\"draw\":true,\"renderer\":\"canvas\",\"events\":[],\"buttons\":[],\"opts\":{\"yAxis\":[{\"show\":true}],\"xAxis\":[{\"data\":[\"2020-01-22\",\"2020-01-23\",\"2020-01-24\",\"2020-01-25\",\"2020-01-26\",\"2020-01-27\",\"2020-01-28\",\"2020-01-29\",\"2020-01-30\",\"2020-01-31\",\"2020-02-01\",\"2020-02-02\",\"2020-02-03\",\"2020-02-04\",\"2020-02-05\",\"2020-02-06\",\"2020-02-07\",\"2020-02-08\",\"2020-02-09\",\"2020-02-10\",\"2020-02-11\",\"2020-02-12\",\"2020-02-13\",\"2020-02-14\",\"2020-02-15\",\"2020-02-16\",\"2020-02-17\",\"2020-02-18\",\"2020-02-19\",\"2020-02-20\",\"2020-02-21\",\"2020-02-22\",\"2020-02-23\",\"2020-02-24\",\"2020-02-25\",\"2020-02-26\",\"2020-02-27\",\"2020-02-28\",\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\"],\"type\":\"time\",\"boundaryGap\":true}],\"legend\":{\"data\":[\"Confirmed\",\"Death\",\"Recovered\"]},\"series\":[{\"data\":[{\"value\":[\"2020-01-22\",\"   555\"]},{\"value\":[\"2020-01-23\",\"    99\"]},{\"value\":[\"2020-01-24\",\"   287\"]},{\"value\":[\"2020-01-25\",\"   493\"]},{\"value\":[\"2020-01-26\",\"   684\"]},{\"value\":[\"2020-01-27\",\"   809\"]},{\"value\":[\"2020-01-28\",\"  2651\"]},{\"value\":[\"2020-01-29\",\"   589\"]},{\"value\":[\"2020-01-30\",\"  2068\"]},{\"value\":[\"2020-01-31\",\"  1692\"]},{\"value\":[\"2020-02-01\",\"  2111\"]},{\"value\":[\"2020-02-02\",\"  4749\"]},{\"value\":[\"2020-02-03\",\"  3100\"]},{\"value\":[\"2020-02-04\",\"  4011\"]},{\"value\":[\"2020-02-05\",\"  3745\"]},{\"value\":[\"2020-02-06\",\"  3160\"]},{\"value\":[\"2020-02-07\",\"  3593\"]},{\"value\":[\"2020-02-08\",\"  2734\"]},{\"value\":[\"2020-02-09\",\"  3030\"]},{\"value\":[\"2020-02-10\",\"  2609\"]},{\"value\":[\"2020-02-11\",\"  2042\"]},{\"value\":[\"2020-02-12\",\"   418\"]},{\"value\":[\"2020-02-13\",\" 15153\"]},{\"value\":[\"2020-02-14\",\"  6527\"]},{\"value\":[\"2020-02-15\",\"  2142\"]},{\"value\":[\"2020-02-16\",\"  2184\"]},{\"value\":[\"2020-02-17\",\"  2035\"]},{\"value\":[\"2020-02-18\",\"  1882\"]},{\"value\":[\"2020-02-19\",\"   500\"]},{\"value\":[\"2020-02-20\",\"   560\"]},{\"value\":[\"2020-02-21\",\"   629\"]},{\"value\":[\"2020-02-22\",\"  1761\"]},{\"value\":[\"2020-02-23\",\"   380\"]},{\"value\":[\"2020-02-24\",\"   564\"]},{\"value\":[\"2020-02-25\",\"   853\"]},{\"value\":[\"2020-02-26\",\"   977\"]},{\"value\":[\"2020-02-27\",\"  1360\"]},{\"value\":[\"2020-02-28\",\"  1385\"]},{\"value\":[\"2020-02-29\",\"  1893\"]},{\"value\":[\"2020-03-01\",\"  2383\"]},{\"value\":[\"2020-03-02\",\"  1978\"]},{\"value\":[\"2020-03-03\",\"  2584\"]},{\"value\":[\"2020-03-04\",\"  2317\"]},{\"value\":[\"2020-03-05\",\"  2764\"]},{\"value\":[\"2020-03-06\",\"  4000\"]},{\"value\":[\"2020-03-07\",\"  4062\"]},{\"value\":[\"2020-03-08\",\"  3960\"]},{\"value\":[\"2020-03-09\",\"  3963\"]},{\"value\":[\"2020-03-10\",\"  5011\"]},{\"value\":[\"2020-03-11\",\"  7681\"]},{\"value\":[\"2020-03-12\",\"  5789\"]},{\"value\":[\"2020-03-13\",\" 14381\"]},{\"value\":[\"2020-03-14\",\" 11078\"]},{\"value\":[\"2020-03-15\",\" 11293\"]},{\"value\":[\"2020-03-16\",\" 14744\"]},{\"value\":[\"2020-03-17\",\" 15931\"]},{\"value\":[\"2020-03-18\",\" 19533\"]},{\"value\":[\"2020-03-19\",\" 27156\"]},{\"value\":[\"2020-03-20\",\" 30635\"]},{\"value\":[\"2020-03-21\",\" 31969\"]},{\"value\":[\"2020-03-22\",\" 34238\"]},{\"value\":[\"2020-03-23\",\" 43368\"]},{\"value\":[\"2020-03-24\",\" 41472\"]},{\"value\":[\"2020-03-25\",\" 50984\"]},{\"value\":[\"2020-03-26\",\" 62726\"]},{\"value\":[\"2020-03-27\",\" 64991\"]},{\"value\":[\"2020-03-28\",\" 67382\"]},{\"value\":[\"2020-03-29\",\" 59399\"]},{\"value\":[\"2020-03-30\",\" 65237\"]},{\"value\":[\"2020-03-31\",\" 76829\"]},{\"value\":[\"2020-04-01\",\" 76526\"]},{\"value\":[\"2020-04-02\",\" 81331\"]},{\"value\":[\"2020-04-03\",\" 83253\"]},{\"value\":[\"2020-04-04\",\" 80354\"]},{\"value\":[\"2020-04-05\",\" 71977\"]},{\"value\":[\"2020-04-06\",\" 73234\"]},{\"value\":[\"2020-04-07\",\" 77740\"]},{\"value\":[\"2020-04-08\",\" 84031\"]},{\"value\":[\"2020-04-09\",\" 86481\"]},{\"value\":[\"2020-04-10\",\" 87540\"]},{\"value\":[\"2020-04-11\",\" 76216\"]},{\"value\":[\"2020-04-12\",\" 95353\"]},{\"value\":[\"2020-04-13\",\" 70145\"]},{\"value\":[\"2020-04-14\",\" 71346\"]},{\"value\":[\"2020-04-15\",\" 81873\"]},{\"value\":[\"2020-04-16\",\" 96921\"]},{\"value\":[\"2020-04-17\",\" 87813\"]},{\"value\":[\"2020-04-18\",\" 73394\"]},{\"value\":[\"2020-04-19\",\" 79972\"]},{\"value\":[\"2020-04-20\",\" 74503\"]},{\"value\":[\"2020-04-21\",\" 75879\"]},{\"value\":[\"2020-04-22\",\" 78019\"]},{\"value\":[\"2020-04-23\",\" 88243\"]},{\"value\":[\"2020-04-24\",\" 84187\"]},{\"value\":[\"2020-04-25\",\" 83681\"]},{\"value\":[\"2020-04-26\",\" 72191\"]},{\"value\":[\"2020-04-27\",\" 69704\"]},{\"value\":[\"2020-04-28\",\" 75492\"]},{\"value\":[\"2020-04-29\",\" 77489\"]},{\"value\":[\"2020-04-30\",\" 83404\"]},{\"value\":[\"2020-05-01\",\" 87217\"]},{\"value\":[\"2020-05-02\",\" 80220\"]},{\"value\":[\"2020-05-03\",\" 76559\"]},{\"value\":[\"2020-05-04\",\" 77100\"]},{\"value\":[\"2020-05-05\",\" 80532\"]},{\"value\":[\"2020-05-06\",\" 89958\"]},{\"value\":[\"2020-05-07\",\" 89076\"]},{\"value\":[\"2020-05-08\",\" 91280\"]},{\"value\":[\"2020-05-09\",\" 84935\"]},{\"value\":[\"2020-05-10\",\" 75215\"]},{\"value\":[\"2020-05-11\",\" 76919\"]},{\"value\":[\"2020-05-12\",\" 84293\"]},{\"value\":[\"2020-05-13\",\" 84848\"]},{\"value\":[\"2020-05-14\",\" 96771\"]},{\"value\":[\"2020-05-15\",\" 96425\"]},{\"value\":[\"2020-05-16\",\" 94227\"]},{\"value\":[\"2020-05-17\",\" 77429\"]},{\"value\":[\"2020-05-18\",\" 88734\"]},{\"value\":[\"2020-05-19\",\" 97221\"]},{\"value\":[\"2020-05-20\",\"102815\"]},{\"value\":[\"2020-05-21\",\"106605\"]},{\"value\":[\"2020-05-22\",\"106092\"]},{\"value\":[\"2020-05-23\",\"104688\"]},{\"value\":[\"2020-05-24\",\" 94566\"]},{\"value\":[\"2020-05-25\",\" 86397\"]},{\"value\":[\"2020-05-26\",\" 93314\"]},{\"value\":[\"2020-05-27\",\"103060\"]},{\"value\":[\"2020-05-28\",\"119582\"]},{\"value\":[\"2020-05-29\",\"121043\"]},{\"value\":[\"2020-05-30\",\"137018\"]},{\"value\":[\"2020-05-31\",\"106659\"]},{\"value\":[\"2020-06-01\",\" 95594\"]},{\"value\":[\"2020-06-02\",\"121442\"]},{\"value\":[\"2020-06-03\",\"118175\"]},{\"value\":[\"2020-06-04\",\"127303\"]},{\"value\":[\"2020-06-05\",\"130903\"]},{\"value\":[\"2020-06-06\",\"134894\"]},{\"value\":[\"2020-06-07\",\"111971\"]},{\"value\":[\"2020-06-08\",\"102531\"]},{\"value\":[\"2020-06-09\",\"124761\"]},{\"value\":[\"2020-06-10\",\"134575\"]},{\"value\":[\"2020-06-11\",\"138192\"]},{\"value\":[\"2020-06-12\",\"128604\"]},{\"value\":[\"2020-06-13\",\"135461\"]},{\"value\":[\"2020-06-14\",\"132762\"]},{\"value\":[\"2020-06-15\",\"119818\"]},{\"value\":[\"2020-06-16\",\"141902\"]},{\"value\":[\"2020-06-17\",\"142562\"]},{\"value\":[\"2020-06-18\",\"140403\"]},{\"value\":[\"2020-06-19\",\"179914\"]},{\"value\":[\"2020-06-20\",\"157328\"]},{\"value\":[\"2020-06-21\",\"128348\"]},{\"value\":[\"2020-06-22\",\"137938\"]},{\"value\":[\"2020-06-23\",\"165401\"]},{\"value\":[\"2020-06-24\",\"170970\"]},{\"value\":[\"2020-06-25\",\"178380\"]},{\"value\":[\"2020-06-26\",\"191439\"]},{\"value\":[\"2020-06-27\",\"178585\"]},{\"value\":[\"2020-06-28\",\"161895\"]},{\"value\":[\"2020-06-29\",\"156233\"]},{\"value\":[\"2020-06-30\",\"174268\"]},{\"value\":[\"2020-07-01\",\"217248\"]},{\"value\":[\"2020-07-02\",\"208147\"]},{\"value\":[\"2020-07-03\",\"202736\"]},{\"value\":[\"2020-07-04\",\"193919\"]},{\"value\":[\"2020-07-05\",\"182996\"]},{\"value\":[\"2020-07-06\",\"165649\"]},{\"value\":[\"2020-07-07\",\"210980\"]},{\"value\":[\"2020-07-08\",\"212406\"]},{\"value\":[\"2020-07-09\",\"228117\"]},{\"value\":[\"2020-07-10\",\"232316\"]},{\"value\":[\"2020-07-11\",\"216417\"]},{\"value\":[\"2020-07-12\",\"192645\"]},{\"value\":[\"2020-07-13\",\"192316\"]},{\"value\":[\"2020-07-14\",\"221339\"]},{\"value\":[\"2020-07-15\",\"231227\"]},{\"value\":[\"2020-07-16\",\"252684\"]},{\"value\":[\"2020-07-17\",\"242265\"]},{\"value\":[\"2020-07-18\",\"236900\"]},{\"value\":[\"2020-07-19\",\"214202\"]},{\"value\":[\"2020-07-20\",\"206732\"]},{\"value\":[\"2020-07-21\",\"233642\"]},{\"value\":[\"2020-07-22\",\"280851\"]},{\"value\":[\"2020-07-23\",\"283112\"]},{\"value\":[\"2020-07-24\",\"280595\"]},{\"value\":[\"2020-07-25\",\"255726\"]},{\"value\":[\"2020-07-26\",\"213218\"]},{\"value\":[\"2020-07-27\",\"226306\"]},{\"value\":[\"2020-07-28\",\"252473\"]},{\"value\":[\"2020-07-29\",\"289713\"]},{\"value\":[\"2020-07-30\",\"280421\"]},{\"value\":[\"2020-07-31\",\"290323\"]},{\"value\":[\"2020-08-01\",\"250661\"]},{\"value\":[\"2020-08-02\",\"228447\"]},{\"value\":[\"2020-08-03\",\"201539\"]},{\"value\":[\"2020-08-04\",\"258682\"]},{\"value\":[\"2020-08-05\",\"272295\"]},{\"value\":[\"2020-08-06\",\"284888\"]},{\"value\":[\"2020-08-07\",\"281085\"]},{\"value\":[\"2020-08-08\",\"259446\"]},{\"value\":[\"2020-08-09\",\"223628\"]},{\"value\":[\"2020-08-10\",\"227340\"]},{\"value\":[\"2020-08-11\",\"255103\"]},{\"value\":[\"2020-08-12\",\"278080\"]},{\"value\":[\"2020-08-13\",\"286213\"]},{\"value\":[\"2020-08-14\",\"304460\"]},{\"value\":[\"2020-08-15\",\"247866\"]},{\"value\":[\"2020-08-16\",\"212057\"]},{\"value\":[\"2020-08-17\",\"210051\"]},{\"value\":[\"2020-08-18\",\"256379\"]},{\"value\":[\"2020-08-19\",\"274599\"]},{\"value\":[\"2020-08-20\",\"267336\"]},{\"value\":[\"2020-08-21\",\"269860\"]},{\"value\":[\"2020-08-22\",\"265493\"]},{\"value\":[\"2020-08-23\",\"205631\"]},{\"value\":[\"2020-08-24\",\"226413\"]},{\"value\":[\"2020-08-25\",\"241990\"]},{\"value\":[\"2020-08-26\",\"289002\"]},{\"value\":[\"2020-08-27\",\"279254\"]},{\"value\":[\"2020-08-28\",\"281664\"]},{\"value\":[\"2020-08-29\",\"260997\"]},{\"value\":[\"2020-08-30\",\"226394\"]},{\"value\":[\"2020-08-31\",\"262535\"]},{\"value\":[\"2020-09-01\",\"264300\"]},{\"value\":[\"2020-09-02\",\"282815\"]},{\"value\":[\"2020-09-03\",\"280924\"]},{\"value\":[\"2020-09-04\",\"312845\"]},{\"value\":[\"2020-09-05\",\"263289\"]},{\"value\":[\"2020-09-06\",\"222140\"]},{\"value\":[\"2020-09-07\",\"233801\"]},{\"value\":[\"2020-09-08\",\"241407\"]},{\"value\":[\"2020-09-09\",\"284385\"]},{\"value\":[\"2020-09-10\",\"299289\"]},{\"value\":[\"2020-09-11\",\"319913\"]},{\"value\":[\"2020-09-12\",\"277346\"]},{\"value\":[\"2020-09-13\",\"236125\"]},{\"value\":[\"2020-09-14\",\"279750\"]},{\"value\":[\"2020-09-15\",\"283867\"]},{\"value\":[\"2020-09-16\",\"304929\"]},{\"value\":[\"2020-09-17\",\"313784\"]},{\"value\":[\"2020-09-18\",\"323476\"]},{\"value\":[\"2020-09-19\",\"281159\"]},{\"value\":[\"2020-09-20\",\"240812\"]},{\"value\":[\"2020-09-21\",\"299382\"]},{\"value\":[\"2020-09-22\",\"279267\"]},{\"value\":[\"2020-09-23\",\"267083\"]},{\"value\":[\"2020-09-24\",\"361034\"]},{\"value\":[\"2020-09-25\",\"330380\"]},{\"value\":[\"2020-09-26\",\"277484\"]},{\"value\":[\"2020-09-27\",\"240255\"]},{\"value\":[\"2020-09-28\",\"277089\"]},{\"value\":[\"2020-09-29\",\"284035\"]},{\"value\":[\"2020-09-30\",\"327027\"]},{\"value\":[\"2020-10-01\",\"317393\"]},{\"value\":[\"2020-10-02\",\"295488\"]},{\"value\":[\"2020-10-03\",\"319999\"]},{\"value\":[\"2020-10-04\",\"247832\"]},{\"value\":[\"2020-10-05\",\"330022\"]},{\"value\":[\"2020-10-06\",\"323354\"]},{\"value\":[\"2020-10-07\",\"349250\"]},{\"value\":[\"2020-10-08\",\"359483\"]},{\"value\":[\"2020-10-09\",\"360884\"]},{\"value\":[\"2020-10-10\",\"330868\"]},{\"value\":[\"2020-10-11\",\"268471\"]},{\"value\":[\"2020-10-12\",\"326215\"]},{\"value\":[\"2020-10-13\",\"328397\"]},{\"value\":[\"2020-10-14\",\"380642\"]},{\"value\":[\"2020-10-15\",\"406677\"]},{\"value\":[\"2020-10-16\",\"411335\"]},{\"value\":[\"2020-10-17\",\"341687\"]},{\"value\":[\"2020-10-18\",\"284803\"]},{\"value\":[\"2020-10-19\",\"439892\"]},{\"value\":[\"2020-10-20\",\"387922\"]},{\"value\":[\"2020-10-21\",\"443764\"]},{\"value\":[\"2020-10-22\",\"468662\"]},{\"value\":[\"2020-10-23\",\"506713\"]},{\"value\":[\"2020-10-24\",\"410890\"]},{\"value\":[\"2020-10-25\",\"345332\"]},{\"value\":[\"2020-10-26\",\"537851\"]},{\"value\":[\"2020-10-27\",\"466936\"]},{\"value\":[\"2020-10-28\",\"517010\"]},{\"value\":[\"2020-10-29\",\"536687\"]}],\"yAxisIndex\":0,\"xAxisIndex\":0,\"name\":\"Confirmed\",\"type\":\"line\",\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[\"2020-01-22\",\"   17\"]},{\"value\":[\"2020-01-23\",\"    1\"]},{\"value\":[\"2020-01-24\",\"    8\"]},{\"value\":[\"2020-01-25\",\"   16\"]},{\"value\":[\"2020-01-26\",\"   14\"]},{\"value\":[\"2020-01-27\",\"   26\"]},{\"value\":[\"2020-01-28\",\"   49\"]},{\"value\":[\"2020-01-29\",\"    2\"]},{\"value\":[\"2020-01-30\",\"   38\"]},{\"value\":[\"2020-01-31\",\"   42\"]},{\"value\":[\"2020-02-01\",\"   46\"]},{\"value\":[\"2020-02-02\",\"  103\"]},{\"value\":[\"2020-02-03\",\"   64\"]},{\"value\":[\"2020-02-04\",\"   66\"]},{\"value\":[\"2020-02-05\",\"   72\"]},{\"value\":[\"2020-02-06\",\"   70\"]},{\"value\":[\"2020-02-07\",\"   85\"]},{\"value\":[\"2020-02-08\",\"   87\"]},{\"value\":[\"2020-02-09\",\"  100\"]},{\"value\":[\"2020-02-10\",\"  107\"]},{\"value\":[\"2020-02-11\",\"  100\"]},{\"value\":[\"2020-02-12\",\"    5\"]},{\"value\":[\"2020-02-13\",\"  253\"]},{\"value\":[\"2020-02-14\",\"  152\"]},{\"value\":[\"2020-02-15\",\"  143\"]},{\"value\":[\"2020-02-16\",\"  104\"]},{\"value\":[\"2020-02-17\",\"   98\"]},{\"value\":[\"2020-02-18\",\"  140\"]},{\"value\":[\"2020-02-19\",\"  115\"]},{\"value\":[\"2020-02-20\",\"  125\"]},{\"value\":[\"2020-02-21\",\"    4\"]},{\"value\":[\"2020-02-22\",\"  207\"]},{\"value\":[\"2020-02-23\",\"   11\"]},{\"value\":[\"2020-02-24\",\"  160\"]},{\"value\":[\"2020-02-25\",\"   80\"]},{\"value\":[\"2020-02-26\",\"   61\"]},{\"value\":[\"2020-02-27\",\"   43\"]},{\"value\":[\"2020-02-28\",\"   59\"]},{\"value\":[\"2020-02-29\",\"   69\"]},{\"value\":[\"2020-03-01\",\"   54\"]},{\"value\":[\"2020-03-02\",\"   89\"]},{\"value\":[\"2020-03-03\",\"   75\"]},{\"value\":[\"2020-03-04\",\"   95\"]},{\"value\":[\"2020-03-05\",\"   93\"]},{\"value\":[\"2020-03-06\",\"  112\"]},{\"value\":[\"2020-03-07\",\"   99\"]},{\"value\":[\"2020-03-08\",\"  244\"]},{\"value\":[\"2020-03-09\",\"  184\"]},{\"value\":[\"2020-03-10\",\"  280\"]},{\"value\":[\"2020-03-11\",\"  344\"]},{\"value\":[\"2020-03-12\",\"  306\"]},{\"value\":[\"2020-03-13\",\"  497\"]},{\"value\":[\"2020-03-14\",\"  420\"]},{\"value\":[\"2020-03-15\",\"  641\"]},{\"value\":[\"2020-03-16\",\"  678\"]},{\"value\":[\"2020-03-17\",\"  811\"]},{\"value\":[\"2020-03-18\",\"  903\"]},{\"value\":[\"2020-03-19\",\" 1114\"]},{\"value\":[\"2020-03-20\",\" 1479\"]},{\"value\":[\"2020-03-21\",\" 1721\"]},{\"value\":[\"2020-03-22\",\" 1674\"]},{\"value\":[\"2020-03-23\",\" 1943\"]},{\"value\":[\"2020-03-24\",\" 2282\"]},{\"value\":[\"2020-03-25\",\" 2798\"]},{\"value\":[\"2020-03-26\",\" 3016\"]},{\"value\":[\"2020-03-27\",\" 3495\"]},{\"value\":[\"2020-03-28\",\" 3713\"]},{\"value\":[\"2020-03-29\",\" 3470\"]},{\"value\":[\"2020-03-30\",\" 4048\"]},{\"value\":[\"2020-03-31\",\" 4748\"]},{\"value\":[\"2020-04-01\",\" 5496\"]},{\"value\":[\"2020-04-02\",\" 6237\"]},{\"value\":[\"2020-04-03\",\" 6101\"]},{\"value\":[\"2020-04-04\",\" 6153\"]},{\"value\":[\"2020-04-05\",\" 5182\"]},{\"value\":[\"2020-04-06\",\" 5941\"]},{\"value\":[\"2020-04-07\",\" 8231\"]},{\"value\":[\"2020-04-08\",\" 6752\"]},{\"value\":[\"2020-04-09\",\" 7773\"]},{\"value\":[\"2020-04-10\",\" 7392\"]},{\"value\":[\"2020-04-11\",\" 6235\"]},{\"value\":[\"2020-04-12\",\" 5810\"]},{\"value\":[\"2020-04-13\",\" 5916\"]},{\"value\":[\"2020-04-14\",\" 6977\"]},{\"value\":[\"2020-04-15\",\" 8351\"]},{\"value\":[\"2020-04-16\",\" 7303\"]},{\"value\":[\"2020-04-17\",\" 8367\"]},{\"value\":[\"2020-04-18\",\" 6013\"]},{\"value\":[\"2020-04-19\",\" 5261\"]},{\"value\":[\"2020-04-20\",\" 5864\"]},{\"value\":[\"2020-04-21\",\" 7191\"]},{\"value\":[\"2020-04-22\",\" 6727\"]},{\"value\":[\"2020-04-23\",\" 6844\"]},{\"value\":[\"2020-04-24\",\" 6657\"]},{\"value\":[\"2020-04-25\",\" 5632\"]},{\"value\":[\"2020-04-26\",\" 3934\"]},{\"value\":[\"2020-04-27\",\" 4674\"]},{\"value\":[\"2020-04-28\",\" 6547\"]},{\"value\":[\"2020-04-29\",\" 6728\"]},{\"value\":[\"2020-04-30\",\" 6000\"]},{\"value\":[\"2020-05-01\",\" 5150\"]},{\"value\":[\"2020-05-02\",\" 5478\"]},{\"value\":[\"2020-05-03\",\" 3465\"]},{\"value\":[\"2020-05-04\",\" 4093\"]},{\"value\":[\"2020-05-05\",\" 5892\"]},{\"value\":[\"2020-05-06\",\" 6548\"]},{\"value\":[\"2020-05-07\",\" 5296\"]},{\"value\":[\"2020-05-08\",\" 5475\"]},{\"value\":[\"2020-05-09\",\" 4295\"]},{\"value\":[\"2020-05-10\",\" 3583\"]},{\"value\":[\"2020-05-11\",\" 3472\"]},{\"value\":[\"2020-05-12\",\" 5521\"]},{\"value\":[\"2020-05-13\",\" 5074\"]},{\"value\":[\"2020-05-14\",\" 5184\"]},{\"value\":[\"2020-05-15\",\" 5122\"]},{\"value\":[\"2020-05-16\",\" 4178\"]},{\"value\":[\"2020-05-17\",\" 3278\"]},{\"value\":[\"2020-05-18\",\" 3693\"]},{\"value\":[\"2020-05-19\",\" 4720\"]},{\"value\":[\"2020-05-20\",\" 4762\"]},{\"value\":[\"2020-05-21\",\" 4721\"]},{\"value\":[\"2020-05-22\",\" 5194\"]},{\"value\":[\"2020-05-23\",\" 3913\"]},{\"value\":[\"2020-05-24\",\" 3117\"]},{\"value\":[\"2020-05-25\",\" 1192\"]},{\"value\":[\"2020-05-26\",\" 4107\"]},{\"value\":[\"2020-05-27\",\" 5146\"]},{\"value\":[\"2020-05-28\",\" 4618\"]},{\"value\":[\"2020-05-29\",\" 4592\"]},{\"value\":[\"2020-05-30\",\" 4074\"]},{\"value\":[\"2020-05-31\",\" 2975\"]},{\"value\":[\"2020-06-01\",\" 3074\"]},{\"value\":[\"2020-06-02\",\" 4730\"]},{\"value\":[\"2020-06-03\",\" 5439\"]},{\"value\":[\"2020-06-04\",\" 5120\"]},{\"value\":[\"2020-06-05\",\" 4558\"]},{\"value\":[\"2020-06-06\",\" 3859\"]},{\"value\":[\"2020-06-07\",\" 2741\"]},{\"value\":[\"2020-06-08\",\" 3674\"]},{\"value\":[\"2020-06-09\",\" 4846\"]},{\"value\":[\"2020-06-10\",\" 5057\"]},{\"value\":[\"2020-06-11\",\" 4688\"]},{\"value\":[\"2020-06-12\",\" 4213\"]},{\"value\":[\"2020-06-13\",\" 4188\"]},{\"value\":[\"2020-06-14\",\" 3407\"]},{\"value\":[\"2020-06-15\",\" 3412\"]},{\"value\":[\"2020-06-16\",\" 6721\"]},{\"value\":[\"2020-06-17\",\" 5091\"]},{\"value\":[\"2020-06-18\",\" 4983\"]},{\"value\":[\"2020-06-19\",\" 6159\"]},{\"value\":[\"2020-06-20\",\" 4215\"]},{\"value\":[\"2020-06-21\",\" 4001\"]},{\"value\":[\"2020-06-22\",\" 3555\"]},{\"value\":[\"2020-06-23\",\" 5224\"]},{\"value\":[\"2020-06-24\",\" 5172\"]},{\"value\":[\"2020-06-25\",\" 4699\"]},{\"value\":[\"2020-06-26\",\" 4698\"]},{\"value\":[\"2020-06-27\",\" 4465\"]},{\"value\":[\"2020-06-28\",\" 3138\"]},{\"value\":[\"2020-06-29\",\" 3723\"]},{\"value\":[\"2020-06-30\",\" 4956\"]},{\"value\":[\"2020-07-01\",\" 4924\"]},{\"value\":[\"2020-07-02\",\" 5067\"]},{\"value\":[\"2020-07-03\",\" 4935\"]},{\"value\":[\"2020-07-04\",\" 4364\"]},{\"value\":[\"2020-07-05\",\" 3472\"]},{\"value\":[\"2020-07-06\",\" 3821\"]},{\"value\":[\"2020-07-07\",\" 6021\"]},{\"value\":[\"2020-07-08\",\" 5271\"]},{\"value\":[\"2020-07-09\",\" 5410\"]},{\"value\":[\"2020-07-10\",\" 5293\"]},{\"value\":[\"2020-07-11\",\" 4792\"]},{\"value\":[\"2020-07-12\",\" 3990\"]},{\"value\":[\"2020-07-13\",\" 3805\"]},{\"value\":[\"2020-07-14\",\" 5594\"]},{\"value\":[\"2020-07-15\",\" 5432\"]},{\"value\":[\"2020-07-16\",\" 5750\"]},{\"value\":[\"2020-07-17\",\" 6656\"]},{\"value\":[\"2020-07-18\",\" 5622\"]},{\"value\":[\"2020-07-19\",\" 4052\"]},{\"value\":[\"2020-07-20\",\" 4167\"]},{\"value\":[\"2020-07-21\",\" 6169\"]},{\"value\":[\"2020-07-22\",\" 6922\"]},{\"value\":[\"2020-07-23\",\" 9897\"]},{\"value\":[\"2020-07-24\",\" 6035\"]},{\"value\":[\"2020-07-25\",\" 5546\"]},{\"value\":[\"2020-07-26\",\" 3660\"]},{\"value\":[\"2020-07-27\",\" 5175\"]},{\"value\":[\"2020-07-28\",\" 6312\"]},{\"value\":[\"2020-07-29\",\" 6573\"]},{\"value\":[\"2020-07-30\",\" 6006\"]},{\"value\":[\"2020-07-31\",\" 6217\"]},{\"value\":[\"2020-08-01\",\" 5492\"]},{\"value\":[\"2020-08-02\",\" 4267\"]},{\"value\":[\"2020-08-03\",\" 4312\"]},{\"value\":[\"2020-08-04\",\" 6920\"]},{\"value\":[\"2020-08-05\",\" 6966\"]},{\"value\":[\"2020-08-06\",\" 6495\"]},{\"value\":[\"2020-08-07\",\" 6302\"]},{\"value\":[\"2020-08-08\",\" 5428\"]},{\"value\":[\"2020-08-09\",\" 4552\"]},{\"value\":[\"2020-08-10\",\" 4908\"]},{\"value\":[\"2020-08-11\",\" 6430\"]},{\"value\":[\"2020-08-12\",\" 6617\"]},{\"value\":[\"2020-08-13\",\" 6216\"]},{\"value\":[\"2020-08-14\",\"10124\"]},{\"value\":[\"2020-08-15\",\" 5351\"]},{\"value\":[\"2020-08-16\",\" 4199\"]},{\"value\":[\"2020-08-17\",\" 4140\"]},{\"value\":[\"2020-08-18\",\" 6878\"]},{\"value\":[\"2020-08-19\",\" 6756\"]},{\"value\":[\"2020-08-20\",\" 6038\"]},{\"value\":[\"2020-08-21\",\" 5492\"]},{\"value\":[\"2020-08-22\",\" 5580\"]},{\"value\":[\"2020-08-23\",\" 3852\"]},{\"value\":[\"2020-08-24\",\" 4358\"]},{\"value\":[\"2020-08-25\",\" 6382\"]},{\"value\":[\"2020-08-26\",\" 6288\"]},{\"value\":[\"2020-08-27\",\" 5892\"]},{\"value\":[\"2020-08-28\",\" 5515\"]},{\"value\":[\"2020-08-29\",\" 5381\"]},{\"value\":[\"2020-08-30\",\" 3909\"]},{\"value\":[\"2020-08-31\",\" 4210\"]},{\"value\":[\"2020-09-01\",\" 6486\"]},{\"value\":[\"2020-09-02\",\" 6018\"]},{\"value\":[\"2020-09-03\",\" 5710\"]},{\"value\":[\"2020-09-04\",\" 5909\"]},{\"value\":[\"2020-09-05\",\" 4945\"]},{\"value\":[\"2020-09-06\",\" 3769\"]},{\"value\":[\"2020-09-07\",\" 9312\"]},{\"value\":[\"2020-09-08\",\" 4939\"]},{\"value\":[\"2020-09-09\",\" 6087\"]},{\"value\":[\"2020-09-10\",\" 5808\"]},{\"value\":[\"2020-09-11\",\" 5880\"]},{\"value\":[\"2020-09-12\",\" 4878\"]},{\"value\":[\"2020-09-13\",\" 3649\"]},{\"value\":[\"2020-09-14\",\" 4434\"]},{\"value\":[\"2020-09-15\",\" 6550\"]},{\"value\":[\"2020-09-16\",\" 5757\"]},{\"value\":[\"2020-09-17\",\" 5459\"]},{\"value\":[\"2020-09-18\",\" 5709\"]},{\"value\":[\"2020-09-19\",\" 5235\"]},{\"value\":[\"2020-09-20\",\" 3696\"]},{\"value\":[\"2020-09-21\",\" 4052\"]},{\"value\":[\"2020-09-22\",\" 5880\"]},{\"value\":[\"2020-09-23\",\" 5609\"]},{\"value\":[\"2020-09-24\",\" 6715\"]},{\"value\":[\"2020-09-25\",\" 5916\"]},{\"value\":[\"2020-09-26\",\" 5281\"]},{\"value\":[\"2020-09-27\",\" 3602\"]},{\"value\":[\"2020-09-28\",\" 3921\"]},{\"value\":[\"2020-09-29\",\" 6095\"]},{\"value\":[\"2020-09-30\",\" 6406\"]},{\"value\":[\"2020-10-01\",\" 8700\"]},{\"value\":[\"2020-10-02\",\" 4968\"]},{\"value\":[\"2020-10-03\",\" 5353\"]},{\"value\":[\"2020-10-04\",\" 3764\"]},{\"value\":[\"2020-10-05\",\" 7007\"]},{\"value\":[\"2020-10-06\",\" 5785\"]},{\"value\":[\"2020-10-07\",\" 5808\"]},{\"value\":[\"2020-10-08\",\" 6244\"]},{\"value\":[\"2020-10-09\",\" 6118\"]},{\"value\":[\"2020-10-10\",\" 4823\"]},{\"value\":[\"2020-10-11\",\" 3894\"]},{\"value\":[\"2020-10-12\",\" 3923\"]},{\"value\":[\"2020-10-13\",\" 5461\"]},{\"value\":[\"2020-10-14\",\" 6003\"]},{\"value\":[\"2020-10-15\",\" 6105\"]},{\"value\":[\"2020-10-16\",\" 6100\"]},{\"value\":[\"2020-10-17\",\" 5479\"]},{\"value\":[\"2020-10-18\",\" 3345\"]},{\"value\":[\"2020-10-19\",\" 4981\"]},{\"value\":[\"2020-10-20\",\" 6586\"]},{\"value\":[\"2020-10-21\",\" 6563\"]},{\"value\":[\"2020-10-22\",\" 5885\"]},{\"value\":[\"2020-10-23\",\" 6954\"]},{\"value\":[\"2020-10-24\",\" 5637\"]},{\"value\":[\"2020-10-25\",\" 3941\"]},{\"value\":[\"2020-10-26\",\" 5761\"]},{\"value\":[\"2020-10-27\",\" 7401\"]},{\"value\":[\"2020-10-28\",\" 7120\"]},{\"value\":[\"2020-10-29\",\" 7020\"]}],\"yAxisIndex\":0,\"xAxisIndex\":0,\"name\":\"Death\",\"type\":\"line\",\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[\"2020-01-22\",\"    28\"]},{\"value\":[\"2020-01-23\",\"     2\"]},{\"value\":[\"2020-01-24\",\"     6\"]},{\"value\":[\"2020-01-25\",\"     3\"]},{\"value\":[\"2020-01-26\",\"    13\"]},{\"value\":[\"2020-01-27\",\"     9\"]},{\"value\":[\"2020-01-28\",\"    46\"]},{\"value\":[\"2020-01-29\",\"    19\"]},{\"value\":[\"2020-01-30\",\"    17\"]},{\"value\":[\"2020-01-31\",\"    79\"]},{\"value\":[\"2020-02-01\",\"    62\"]},{\"value\":[\"2020-02-02\",\"   188\"]},{\"value\":[\"2020-02-03\",\"   151\"]},{\"value\":[\"2020-02-04\",\"   229\"]},{\"value\":[\"2020-02-05\",\"   272\"]},{\"value\":[\"2020-02-06\",\"   363\"]},{\"value\":[\"2020-02-07\",\"   524\"]},{\"value\":[\"2020-02-08\",\"   605\"]},{\"value\":[\"2020-02-09\",\"   628\"]},{\"value\":[\"2020-02-10\",\"   702\"]},{\"value\":[\"2020-02-11\",\"   737\"]},{\"value\":[\"2020-02-12\",\"   467\"]},{\"value\":[\"2020-02-13\",\"  1145\"]},{\"value\":[\"2020-02-14\",\"  1763\"]},{\"value\":[\"2020-02-15\",\"  1337\"]},{\"value\":[\"2020-02-16\",\"  1470\"]},{\"value\":[\"2020-02-17\",\"  1718\"]},{\"value\":[\"2020-02-18\",\"  1769\"]},{\"value\":[\"2020-02-19\",\"  1769\"]},{\"value\":[\"2020-02-20\",\"  2056\"]},{\"value\":[\"2020-02-21\",\"   713\"]},{\"value\":[\"2020-02-22\",\"  3996\"]},{\"value\":[\"2020-02-23\",\"   508\"]},{\"value\":[\"2020-02-24\",\"  1833\"]},{\"value\":[\"2020-02-25\",\"  2678\"]},{\"value\":[\"2020-02-26\",\"  2479\"]},{\"value\":[\"2020-02-27\",\"  2893\"]},{\"value\":[\"2020-02-28\",\"  3434\"]},{\"value\":[\"2020-02-29\",\"  3071\"]},{\"value\":[\"2020-03-01\",\"  2934\"]},{\"value\":[\"2020-03-02\",\"  2886\"]},{\"value\":[\"2020-03-03\",\"  2626\"]},{\"value\":[\"2020-03-04\",\"  2942\"]},{\"value\":[\"2020-03-05\",\"  2626\"]},{\"value\":[\"2020-03-06\",\"  2069\"]},{\"value\":[\"2020-03-07\",\"  2494\"]},{\"value\":[\"2020-03-08\",\"  2335\"]},{\"value\":[\"2020-03-09\",\"  1799\"]},{\"value\":[\"2020-03-10\",\"  1911\"]},{\"value\":[\"2020-03-11\",\"  2598\"]},{\"value\":[\"2020-03-12\",\"  1322\"]},{\"value\":[\"2020-03-13\",\"  1927\"]},{\"value\":[\"2020-03-14\",\"  2371\"]},{\"value\":[\"2020-03-15\",\"  3410\"]},{\"value\":[\"2020-03-16\",\"  2054\"]},{\"value\":[\"2020-03-17\",\"  2752\"]},{\"value\":[\"2020-03-18\",\"  2483\"]},{\"value\":[\"2020-03-19\",\"  1637\"]},{\"value\":[\"2020-03-20\",\"  2445\"]},{\"value\":[\"2020-03-21\",\"  4267\"]},{\"value\":[\"2020-03-22\",\"  6215\"]},{\"value\":[\"2020-03-23\",\"   466\"]},{\"value\":[\"2020-03-24\",\"  9641\"]},{\"value\":[\"2020-03-25\",\"  5783\"]},{\"value\":[\"2020-03-26\",\"  8370\"]},{\"value\":[\"2020-03-27\",\"  8776\"]},{\"value\":[\"2020-03-28\",\"  8503\"]},{\"value\":[\"2020-03-29\",\"  9467\"]},{\"value\":[\"2020-03-30\",\" 15446\"]},{\"value\":[\"2020-03-31\",\" 13488\"]},{\"value\":[\"2020-04-01\",\" 15093\"]},{\"value\":[\"2020-04-02\",\" 17049\"]},{\"value\":[\"2020-04-03\",\" 15448\"]},{\"value\":[\"2020-04-04\",\" 20417\"]},{\"value\":[\"2020-04-05\",\" 13840\"]},{\"value\":[\"2020-04-06\",\" 16580\"]},{\"value\":[\"2020-04-07\",\" 23391\"]},{\"value\":[\"2020-04-08\",\" 28716\"]},{\"value\":[\"2020-04-09\",\" 25348\"]},{\"value\":[\"2020-04-10\",\" 21802\"]},{\"value\":[\"2020-04-11\",\" 26257\"]},{\"value\":[\"2020-04-12\",\" 19414\"]},{\"value\":[\"2020-04-13\",\" 27167\"]},{\"value\":[\"2020-04-14\",\" 25089\"]},{\"value\":[\"2020-04-15\",\" 36670\"]},{\"value\":[\"2020-04-16\",\" 30820\"]},{\"value\":[\"2020-04-17\",\" 26123\"]},{\"value\":[\"2020-04-18\",\" 23919\"]},{\"value\":[\"2020-04-19\",\" 31655\"]},{\"value\":[\"2020-04-20\",\" 21990\"]},{\"value\":[\"2020-04-21\",\" 34843\"]},{\"value\":[\"2020-04-22\",\" 30425\"]},{\"value\":[\"2020-04-23\",\" 28780\"]},{\"value\":[\"2020-04-24\",\" 50051\"]},{\"value\":[\"2020-04-25\",\" 27779\"]},{\"value\":[\"2020-04-26\",\" 28605\"]},{\"value\":[\"2020-04-27\",\" 27769\"]},{\"value\":[\"2020-04-28\",\" 33271\"]},{\"value\":[\"2020-04-29\",\" 42182\"]},{\"value\":[\"2020-04-30\",\" 64966\"]},{\"value\":[\"2020-05-01\",\" 38253\"]},{\"value\":[\"2020-05-02\",\" 40879\"]},{\"value\":[\"2020-05-03\",\" 32316\"]},{\"value\":[\"2020-05-04\",\" 34087\"]},{\"value\":[\"2020-05-05\",\" 36540\"]},{\"value\":[\"2020-05-06\",\" 46006\"]},{\"value\":[\"2020-05-07\",\" 39468\"]},{\"value\":[\"2020-05-08\",\" 36550\"]},{\"value\":[\"2020-05-09\",\" 53550\"]},{\"value\":[\"2020-05-10\",\" 33594\"]},{\"value\":[\"2020-05-11\",\" 46994\"]},{\"value\":[\"2020-05-12\",\" 37021\"]},{\"value\":[\"2020-05-13\",\" 55856\"]},{\"value\":[\"2020-05-14\",\" 39716\"]},{\"value\":[\"2020-05-15\",\" 48008\"]},{\"value\":[\"2020-05-16\",\" 56592\"]},{\"value\":[\"2020-05-17\",\" 40907\"]},{\"value\":[\"2020-05-18\",\" 52921\"]},{\"value\":[\"2020-05-19\",\" 52105\"]},{\"value\":[\"2020-05-20\",\" 58928\"]},{\"value\":[\"2020-05-21\",\" 51265\"]},{\"value\":[\"2020-05-22\",\"108651\"]},{\"value\":[\"2020-05-23\",\" 54971\"]},{\"value\":[\"2020-05-24\",\" 55440\"]},{\"value\":[\"2020-05-25\",\" 63723\"]},{\"value\":[\"2020-05-26\",\" 55214\"]},{\"value\":[\"2020-05-27\",\" 63393\"]},{\"value\":[\"2020-05-28\",\" 66857\"]},{\"value\":[\"2020-05-29\",\" 77346\"]},{\"value\":[\"2020-05-30\",\" 70453\"]},{\"value\":[\"2020-05-31\",\" 76320\"]},{\"value\":[\"2020-06-01\",\" 54897\"]},{\"value\":[\"2020-06-02\",\"104123\"]},{\"value\":[\"2020-06-03\",\" 79104\"]},{\"value\":[\"2020-06-04\",\" 70053\"]},{\"value\":[\"2020-06-05\",\" 69159\"]},{\"value\":[\"2020-06-06\",\" 72204\"]},{\"value\":[\"2020-06-07\",\" 55101\"]},{\"value\":[\"2020-06-08\",\"151563\"]},{\"value\":[\"2020-06-09\",\" 82282\"]},{\"value\":[\"2020-06-10\",\" 79138\"]},{\"value\":[\"2020-06-11\",\" 85882\"]},{\"value\":[\"2020-06-12\",\" 79724\"]},{\"value\":[\"2020-06-13\",\" 85934\"]},{\"value\":[\"2020-06-14\",\" 70785\"]},{\"value\":[\"2020-06-15\",\" 80208\"]},{\"value\":[\"2020-06-16\",\" 97840\"]},{\"value\":[\"2020-06-17\",\"118787\"]},{\"value\":[\"2020-06-18\",\" 81142\"]},{\"value\":[\"2020-06-19\",\" 95015\"]},{\"value\":[\"2020-06-20\",\"115825\"]},{\"value\":[\"2020-06-21\",\" 68737\"]},{\"value\":[\"2020-06-22\",\" 91626\"]},{\"value\":[\"2020-06-23\",\"104075\"]},{\"value\":[\"2020-06-24\",\"115760\"]},{\"value\":[\"2020-06-25\",\" 92856\"]},{\"value\":[\"2020-06-26\",\"106714\"]},{\"value\":[\"2020-06-27\",\"106365\"]},{\"value\":[\"2020-06-28\",\" 89120\"]},{\"value\":[\"2020-06-29\",\" 94566\"]},{\"value\":[\"2020-06-30\",\"117322\"]},{\"value\":[\"2020-07-01\",\"115926\"]},{\"value\":[\"2020-07-02\",\"284877\"]},{\"value\":[\"2020-07-03\",\"109900\"]},{\"value\":[\"2020-07-04\",\"195833\"]},{\"value\":[\"2020-07-05\",\"119322\"]},{\"value\":[\"2020-07-06\",\"123612\"]},{\"value\":[\"2020-07-07\",\"145025\"]},{\"value\":[\"2020-07-08\",\"157949\"]},{\"value\":[\"2020-07-09\",\"134514\"]},{\"value\":[\"2020-07-10\",\"139392\"]},{\"value\":[\"2020-07-11\",\"125709\"]},{\"value\":[\"2020-07-12\",\"111679\"]},{\"value\":[\"2020-07-13\",\"140344\"]},{\"value\":[\"2020-07-14\",\"142200\"]},{\"value\":[\"2020-07-15\",\"159781\"]},{\"value\":[\"2020-07-16\",\"152370\"]},{\"value\":[\"2020-07-17\",\"183310\"]},{\"value\":[\"2020-07-18\",\"150957\"]},{\"value\":[\"2020-07-19\",\" 87877\"]},{\"value\":[\"2020-07-20\",\"158996\"]},{\"value\":[\"2020-07-21\",\"174647\"]},{\"value\":[\"2020-07-22\",\"176387\"]},{\"value\":[\"2020-07-23\",\"170164\"]},{\"value\":[\"2020-07-24\",\"229317\"]},{\"value\":[\"2020-07-25\",\"219317\"]},{\"value\":[\"2020-07-26\",\"140476\"]},{\"value\":[\"2020-07-27\",\"169623\"]},{\"value\":[\"2020-07-28\",\"173854\"]},{\"value\":[\"2020-07-29\",\"201690\"]},{\"value\":[\"2020-07-30\",\"222487\"]},{\"value\":[\"2020-07-31\",\"198605\"]},{\"value\":[\"2020-08-01\",\"184597\"]},{\"value\":[\"2020-08-02\",\"136703\"]},{\"value\":[\"2020-08-03\",\"222445\"]},{\"value\":[\"2020-08-04\",\"221735\"]},{\"value\":[\"2020-08-05\",\"221696\"]},{\"value\":[\"2020-08-06\",\"188970\"]},{\"value\":[\"2020-08-07\",\"192651\"]},{\"value\":[\"2020-08-08\",\"201379\"]},{\"value\":[\"2020-08-09\",\"176858\"]},{\"value\":[\"2020-08-10\",\"164231\"]},{\"value\":[\"2020-08-11\",\"305143\"]},{\"value\":[\"2020-08-12\",\"241505\"]},{\"value\":[\"2020-08-13\",\"165213\"]},{\"value\":[\"2020-08-14\",\"284450\"]},{\"value\":[\"2020-08-15\",\"169013\"]},{\"value\":[\"2020-08-16\",\"231256\"]},{\"value\":[\"2020-08-17\",\"211585\"]},{\"value\":[\"2020-08-18\",\"227987\"]},{\"value\":[\"2020-08-19\",\"217585\"]},{\"value\":[\"2020-08-20\",\"207904\"]},{\"value\":[\"2020-08-21\",\"170093\"]},{\"value\":[\"2020-08-22\",\"210122\"]},{\"value\":[\"2020-08-23\",\"215236\"]},{\"value\":[\"2020-08-24\",\"200201\"]},{\"value\":[\"2020-08-25\",\"232787\"]},{\"value\":[\"2020-08-26\",\"224503\"]},{\"value\":[\"2020-08-27\",\"201706\"]},{\"value\":[\"2020-08-28\",\"200578\"]},{\"value\":[\"2020-08-29\",\"211741\"]},{\"value\":[\"2020-08-30\",\"208554\"]},{\"value\":[\"2020-08-31\",\"201563\"]},{\"value\":[\"2020-09-01\",\"254997\"]},{\"value\":[\"2020-09-02\",\"218769\"]},{\"value\":[\"2020-09-03\",\"220901\"]},{\"value\":[\"2020-09-04\",\"213938\"]},{\"value\":[\"2020-09-05\",\"200990\"]},{\"value\":[\"2020-09-06\",\"210230\"]},{\"value\":[\"2020-09-07\",\"198899\"]},{\"value\":[\"2020-09-08\",\"200863\"]},{\"value\":[\"2020-09-09\",\"240031\"]},{\"value\":[\"2020-09-10\",\"215767\"]},{\"value\":[\"2020-09-11\",\"223534\"]},{\"value\":[\"2020-09-12\",\"223479\"]},{\"value\":[\"2020-09-13\",\"185941\"]},{\"value\":[\"2020-09-14\",\"229607\"]},{\"value\":[\"2020-09-15\",\"224786\"]},{\"value\":[\"2020-09-16\",\"229124\"]},{\"value\":[\"2020-09-17\",\"219486\"]},{\"value\":[\"2020-09-18\",\"251942\"]},{\"value\":[\"2020-09-19\",\"237937\"]},{\"value\":[\"2020-09-20\",\"236133\"]},{\"value\":[\"2020-09-21\",\"243350\"]},{\"value\":[\"2020-09-22\",\"218260\"]},{\"value\":[\"2020-09-23\",\"263721\"]},{\"value\":[\"2020-09-24\",\"254751\"]},{\"value\":[\"2020-09-25\",\"239727\"]},{\"value\":[\"2020-09-26\",\"243351\"]},{\"value\":[\"2020-09-27\",\"210400\"]},{\"value\":[\"2020-09-28\",\"225556\"]},{\"value\":[\"2020-09-29\",\"236681\"]},{\"value\":[\"2020-09-30\",\"249536\"]},{\"value\":[\"2020-10-01\",\"220615\"]},{\"value\":[\"2020-10-02\",\"171897\"]},{\"value\":[\"2020-10-03\",\"258186\"]},{\"value\":[\"2020-10-04\",\"218201\"]},{\"value\":[\"2020-10-05\",\"238887\"]},{\"value\":[\"2020-10-06\",\"231579\"]},{\"value\":[\"2020-10-07\",\"255400\"]},{\"value\":[\"2020-10-08\",\"219492\"]},{\"value\":[\"2020-10-09\",\"205297\"]},{\"value\":[\"2020-10-10\",\"192046\"]},{\"value\":[\"2020-10-11\",\"217826\"]},{\"value\":[\"2020-10-12\",\"204353\"]},{\"value\":[\"2020-10-13\",\"190445\"]},{\"value\":[\"2020-10-14\",\"211949\"]},{\"value\":[\"2020-10-15\",\"207181\"]},{\"value\":[\"2020-10-16\",\"204654\"]},{\"value\":[\"2020-10-17\",\"198680\"]},{\"value\":[\"2020-10-18\",\"198996\"]},{\"value\":[\"2020-10-19\",\"210302\"]},{\"value\":[\"2020-10-20\",\"210415\"]},{\"value\":[\"2020-10-21\",\"211138\"]},{\"value\":[\"2020-10-22\",\"226404\"]},{\"value\":[\"2020-10-23\",\"206123\"]},{\"value\":[\"2020-10-24\",\"211267\"]},{\"value\":[\"2020-10-25\",\"196355\"]},{\"value\":[\"2020-10-26\",\"239426\"]},{\"value\":[\"2020-10-27\",\"590521\"]},{\"value\":[\"2020-10-28\",\"262642\"]},{\"value\":[\"2020-10-29\",\"246547\"]}],\"yAxisIndex\":0,\"xAxisIndex\":0,\"name\":\"Recovered\",\"type\":\"line\",\"coordinateSystem\":\"cartesian2d\"}],\"tooltip\":{\"trigger\":\"axis\"},\"dataZoom\":[{\"type\":\"slider\"}],\"toolbox\":{\"feature\":{\"dataZoom\":[]}},\"title\":[{\"text\":\"Worldwide COVID-19 cases\"}]},\"dispose\":true},\"evals\":[],\"jsHooks\":[]}\n\nThis plot is interactive so you can hover over the plot to get the exact readings. You can also toggle time series on or off by clicking on the legends on top.\n\n\n\n",
    "preview": {},
    "last_modified": "2020-10-31T23:04:43-05:00",
    "input_file": {}
  }
]
